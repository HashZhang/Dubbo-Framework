2015-10-21 17:05:20,069 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo Log4jContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:20,183 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:05:20,186 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:05:20,186 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:05:20,190 [main] INFO  org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:510) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@aff1e8: startup date [Wed Oct 21 17:05:20 CST 2015]; root of context hierarchy
2015-10-21 17:05:20,250 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:05:20,250 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:05:20,251 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:05:20,265 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring]
2015-10-21 17:05:20,266 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/META-INF/spring/*.xml]
2015-10-21 17:05:20,271 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring]
2015-10-21 17:05:20,271 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/META-INF/spring/*.xml]
2015-10-21 17:05:20,272 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring]
2015-10-21 17:05:20,272 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/META-INF/spring/*.xml]
2015-10-21 17:05:20,273 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]]
2015-10-21 17:05:20,275 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml]
2015-10-21 17:05:20,278 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:05:20,310 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2015-10-21 17:05:20,321 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-10-21 17:05:20,323 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:05:20,360 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
2015-10-21 17:05:20,365 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:05:20,376 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:05:20,394 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver (DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-10-21 17:05:20,420 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:05:20,421 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:05:20,421 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:05:20,427 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:231) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-10-21 17:05:20,432 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template]
2015-10-21 17:05:20,432 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,434 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,435 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,436 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template]
2015-10-21 17:05:20,437 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,438 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,438 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,440 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template]
2015-10-21 17:05:20,440 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,441 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,442 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,443 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,444 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template]
2015-10-21 17:05:20,444 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,445 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,446 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,447 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,448 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,449 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,450 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,452 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template]
2015-10-21 17:05:20,452 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,453 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,454 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,455 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:05:20,456 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo\DemoServiceTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\DemoServerMain.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl$1.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\DemoManager.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\DemoTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend\DemoTestExtend.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain\Demo.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoRestService.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoService.class]]
2015-10-21 17:05:20,522 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class]
2015-10-21 17:05:20,529 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class]
2015-10-21 17:05:20,533 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class]
2015-10-21 17:05:20,579 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0]
2015-10-21 17:05:20,580 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml]
2015-10-21 17:05:20,583 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:05:20,585 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2015-10-21 17:05:20,599 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-10-21 17:05:20,616 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:05:20,681 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml]
2015-10-21 17:05:20,687 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:05:20,689 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:05:20,699 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
2015-10-21 17:05:20,701 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:05:20,706 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-3.2.xsd
2015-10-21 17:05:20,709 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:05:20,782 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]
2015-10-21 17:05:20,784 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:05:20,787 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:05:20,794 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:05:20,796 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2015-10-21 17:05:20,796 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader (AbstractBeanDefinitionReader.java:216) - Loaded 19 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2015-10-21 17:05:20,796 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:540) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@aff1e8: org.springframework.beans.factory.support.DefaultListableBeanFactory@1132ceb: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0]; root of factory hierarchy
2015-10-21 17:05:20,844 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:05:20,844 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:05:20,868 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:05:20,873 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:05:20,873 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:05:20,873 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:05:20,873 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:05:20,931 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:05:20,931 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:05:21,002 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:05:21,002 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:05:21,002 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:05:21,004 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/framework/template/dao/mapper/**/*.class] to resources []
2015-10-21 17:05:21,004 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner (ClassPathMapperScanner.java:158) - No MyBatis mapper was found in '[com.sf.framework.template.dao.mapper]' package. Please check your configuration.
2015-10-21 17:05:21,005 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:05:21,005 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:05:21,007 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:05:21,022 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:05:21,022 [main] INFO  org.springframework.core.io.support.PropertiesLoaderSupport (PropertiesLoaderSupport.java:172) - Loading properties file from class path resource [jdbc.properties]
2015-10-21 17:05:21,033 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:05:21,033 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:05:21,034 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:05:21,034 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:05:21,035 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:05:21,035 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:05:21,035 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:05:21,035 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:05:21,036 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:05:21,036 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:05:21,042 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:05:21,042 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:05:21,042 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:05:21,043 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:05:21,043 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-10-21 17:05:21,043 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:05:21,043 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:05:21,043 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:05:21,055 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-10-21 17:05:21,069 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:05:21,073 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:807) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1284069]
2015-10-21 17:05:21,076 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:831) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@956751]
2015-10-21 17:05:21,079 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:598) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1132ceb: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-10-21 17:05:21,079 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:05:21,080 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:05:21,080 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,080 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,082 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' to allow for resolving potential circular references
2015-10-21 17:05:21,093 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataPointcut'
2015-10-21 17:05:21,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataPointcut'
2015-10-21 17:05:21,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,152 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoRestServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:05:21,152 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoRestServiceImpl' to allow for resolving potential circular references
2015-10-21 17:05:21,157 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoRestServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:05:21,159 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,179 [main] DEBUG org.apache.ibatis.logging.LogFactory (LogFactory.java:128) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2015-10-21 17:05:21,184 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoManagerImpl'
2015-10-21 17:05:21,184 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoManagerImpl'
2015-10-21 17:05:21,184 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,187 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoManagerImpl' to allow for resolving potential circular references
2015-10-21 17:05:21,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,419 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataAdvice'
2015-10-21 17:05:21,420 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataAdvice'
2015-10-21 17:05:21,422 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataAdvice' to allow for resolving potential circular references
2015-10-21 17:05:21,430 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'transactionManager'
2015-10-21 17:05:21,431 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'transactionManager'
2015-10-21 17:05:21,431 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,439 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-10-21 17:05:21,445 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataSource'
2015-10-21 17:05:21,445 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataSource'
2015-10-21 17:05:21,446 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,528 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-10-21 17:05:21,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,698 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataSource'
2015-10-21 17:05:21,700 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-10-21 17:05:21,700 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,701 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,703 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'transactionManager'
2015-10-21 17:05:21,704 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean '(inner bean)'
2015-10-21 17:05:21,704 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,711 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:05:21,711 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:05:21,711 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:05:21,711 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:05:21,711 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:05:21,712 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:05:21,712 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [select*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:05:21,712 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [query*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:05:21,712 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [get*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:05:21,712 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,712 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,714 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean '(inner bean)'
2015-10-21 17:05:21,714 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'dataAdvice'
2015-10-21 17:05:21,714 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataAdvice'
2015-10-21 17:05:21,732 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator (AbstractAutoProxyCreator.java:538) - Creating implicit proxy for bean 'demoManagerImpl' with 0 common interceptors and 2 specific interceptors
2015-10-21 17:05:21,734 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl@b5ef94]
2015-10-21 17:05:21,739 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoManagerImpl'
2015-10-21 17:05:21,739 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoRestServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:05:21,740 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,740 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,744 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:05:21,744 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoServiceImpl'
2015-10-21 17:05:21,744 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoServiceImpl'
2015-10-21 17:05:21,744 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,747 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:05:21,747 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoServiceImpl' to allow for resolving potential circular references
2015-10-21 17:05:21,750 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:05:21,750 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:05:21,750 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:05:21,750 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,751 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,751 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoServiceImpl'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'rest'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'rest'
2015-10-21 17:05:21,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,755 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'rest' to allow for resolving potential circular references
2015-10-21 17:05:21,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,766 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'rest'
2015-10-21 17:05:21,766 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:05:21,766 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:05:21,766 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:21,769 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:21,972 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:21,993 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoService' to allow for resolving potential circular references
2015-10-21 17:05:22,013 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoServiceImpl'
2015-10-21 17:05:22,015 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:05:22,017 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,017 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,036 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:05:22,036 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:05:22,036 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:05:22,036 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoRestService' to allow for resolving potential circular references
2015-10-21 17:05:22,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:05:22,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'rest'
2015-10-21 17:05:22,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:05:22,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'transactionManager'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataAdvice'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:05:22,042 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'sqlSessionFactory'
2015-10-21 17:05:22,047 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2015-10-21 17:05:22,051 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db]
2015-10-21 17:05:22,051 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:05:22,133 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:05:22,135 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:05:22,136 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:/sqlmap/db/**/*Mapper.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]]
2015-10-21 17:05:22,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:05:22,136 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2015-10-21 17:05:22,136 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:362) - Property 'configLocation' not specified, using default MyBatis Configuration
2015-10-21 17:05:22,394 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml]'
2015-10-21 17:05:22,420 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]'
2015-10-21 17:05:22,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:05:22,431 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'sqlSessionFactory'
2015-10-21 17:05:22,433 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:05:22,433 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:05:22,434 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:858) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45ffbf]
2015-10-21 17:05:22,435 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:05:22,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:05:22,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:05:22,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:05:22,437 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,616 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,641 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,657 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,677 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,677 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,677 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoService url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483 to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=9520&registry=zookeeper&timestamp=1445418322454, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,690 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,706 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,748 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,781 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,814 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,884 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Using select timeout of 500, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:22,884 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Epoll-bug workaround enabled = false, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,019 [main] INFO  com.alibaba.dubbo.remoting.transport.AbstractServer (AbstractServer.java:70) -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.118.45.69:20880, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,030 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,050 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:232) -  [DUBBO] Load registry store file d:\user\709166\.dubbo\dubbo-registry-10.202.4.179.cache, data: {com.sf.nirvana.template.service.demo.DemoRestService=empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=8156&server=tomcat&side=provider&threads=500&timestamp=1445418065704&validation=true, com.sf.nirvana.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=6368&side=provider&timestamp=1444802610435, com.sf.nirvana.test.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.test.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.test.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=8284&side=provider&timestamp=1444803114507, com.sf.framework.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.framework.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.framework.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9040&side=provider&timestamp=1444793216887, com.sf.nirvana.template.service.demo.DemoService=empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=8156&side=provider&timestamp=1445418065015}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,084 [main] DEBUG org.I0Itec.zkclient.ZkConnection (ZkConnection.java:63) - Creating new ZookKeeper instance to connect to 10.202.4.179:2181.
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:host.name=HQSFTCSFIT0480A.sf.com
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.version=1.7.0_60
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.vendor=Oracle Corporation
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.home=C:\Program Files\Java\jdk1.7.0_60\jre
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.class.path=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-common\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context-support\3.2.8.RELEASE\spring-context-support-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-jdbc\3.2.8.RELEASE\spring-jdbc-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-tx\3.2.8.RELEASE\spring-tx-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-oxm\3.2.8.RELEASE\spring-oxm-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\mysql\mysql-connector-java\5.1.8\mysql-connector-java-5.1.8.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\druid\1.0.6\druid-1.0.6.jar;C:\Program Files\Java\jdk1.7.0_60\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0_60\lib\tools.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-web\3.2.8.RELEASE\spring-web-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sap-esb-interface_20150129.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sftpClient-1.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\jcraft\jsch\0.1.53\jsch-0.1.53.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\lingala\zip4j\zip4j\1.3.2\zip4j-1.3.2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\com\sf\framework\sf-framework-common\1.0.0\sf-framework-common-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator\5.1.1.Final\hibernate-validator-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\classmate\1.0.0\classmate-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator-annotation-processor\5.1.1.Final\hibernate-validator-annotation-processor-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\jackson\core\jackson-annotations\2.5.3\jackson-annotations-2.5.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\dubbo\sf.2.0.0\dubbo-sf.2.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-beans\3.2.8.RELEASE\spring-beans-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-core\3.2.8.RELEASE\spring-core-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context\3.2.8.RELEASE\spring-context-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-aop\3.2.8.RELEASE\spring-aop-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-expression\3.2.8.RELEASE\spring-expression-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpclient\4.2.1\httpclient-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpcore\4.2.1\httpcore-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\google\guava\guava\18.0\guava-18.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\101tec\zkclient\0.4\zkclient-0.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\opensymphony\quartz\quartz-all\1.6.1\quartz-all-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\activation\activation\1.1\activation-1.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-io\commons-io\2.1\commons-io-2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-core-asl\1.9.4\jackson-core-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-mapper-asl\1.9.4\jackson-mapper-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-jaxrs\1.9.4\jackson-jaxrs-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\junit\junit\4.11\junit-4.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-test\3.2.8.RELEASE\spring-test-3.2.8.RELEASE.jar
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.7.0_60\jre\bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/lib/i386;C:\Program Files\Java\jdk1.7.0_60\bin;D:\Program Files\apache-maven-3.2.1\bin;D:\Program Files\apache-cxf-3.0.2\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;D:\Program Files\TortoiseSVN\bin;D:\Program Files\TortoiseGit\bin;C:\Program Files\Common Files\NetSarang;;D:\eclipse-jee-luna;;.
2015-10-21 17:05:23,098 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.io.tmpdir=C:\Users\709166\AppData\Local\Temp\
2015-10-21 17:05:23,100 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.compiler=<NA>
2015-10-21 17:05:23,109 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.name=Windows 7
2015-10-21 17:05:23,109 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.arch=x86
2015-10-21 17:05:23,110 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.version=6.1
2015-10-21 17:05:23,110 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.name=709166
2015-10-21 17:05:23,110 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.home=d:\user\709166
2015-10-21 17:05:23,110 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.dir=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service
2015-10-21 17:05:23,111 [main] INFO  org.apache.zookeeper.ZooKeeper (ZooKeeper.java:438) - Initiating client connection, connectString=10.202.4.179:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@1791d43
2015-10-21 17:05:23,121 [main] DEBUG org.apache.zookeeper.ClientCnxn (ClientCnxn.java:102) - zookeeper.disableAutoWatchReset is false
2015-10-21 17:05:23,108 [ZkClient-EventThread-19-10.202.4.179:2181] INFO  org.I0Itec.zkclient.ZkEventThread (ZkEventThread.java:64) - Starting ZkClient event thread.
2015-10-21 17:05:23,140 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:893) - Awaiting connection to Zookeeper server
2015-10-21 17:05:23,140 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:643) - Waiting for keeper state SyncConnected
2015-10-21 17:05:23,150 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:975) - Opening socket connection to server 10.202.4.179/10.202.4.179:2181. Will not attempt to authenticate using SASL (unknown error)
2015-10-21 17:05:23,152 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:852) - Socket connection established to 10.202.4.179/10.202.4.179:2181, initiating session
2015-10-21 17:05:23,155 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:892) - Session establishment request sent on 10.202.4.179/10.202.4.179:2181
2015-10-21 17:05:23,162 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:1235) - Session establishment complete on server 10.202.4.179/10.202.4.179:2181, sessionid = 0x15060f0f114001c, negotiated timeout = 40000
2015-10-21 17:05:23,165 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:351) - Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-21 17:05:23,165 [main-EventThread] INFO  org.I0Itec.zkclient.ZkClient (ZkClient.java:449) - zookeeper state changed (SyncConnected)
2015-10-21 17:05:23,165 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:395) - Leaving process event
2015-10-21 17:05:23,165 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:653) - State is SyncConnected
2015-10-21 17:05:23,167 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,192 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,543,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:23,209 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,544,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:23,212 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,545,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:23,217 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,546,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D9520%2526side%253Dprovider%2526timestamp%253D1445418322483,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D9520%2526side%253Dprovider%2526timestamp%253D1445418322483 
2015-10-21 17:05:23,218 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,223 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,547,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:23,227 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,548,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:23,232 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,549,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:23,241 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,549,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: s{458,458,1445417494258,1445417494258,0,0,0,0,0,0,458} 
2015-10-21 17:05:23,251 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,549,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: v{} 
2015-10-21 17:05:23,251 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483, urls: [empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,261 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,281 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,292 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoRestService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,307 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,344 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,344 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:23,345 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoRestService url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=9520&registry=zookeeper&timestamp=1445418323297, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:24,563 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:24,566 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,550,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:24,569 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,551,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:24,571 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,552,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:24,576 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,553,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D9520%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418323323%2526validation%253Dtrue,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D9520%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418323323%2526validation%253Dtrue 
2015-10-21 17:05:24,576 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:24,583 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,554,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:24,586 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,555,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:24,588 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,556,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:05:24,591 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,556,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: s{507,507,1445417810227,1445417810227,0,0,0,0,0,0,507} 
2015-10-21 17:05:24,594 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001c, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,556,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: v{} 
2015-10-21 17:05:24,594 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true, urls: [empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:24,597 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-10-21 17:05:24,599 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-10-21 17:05:24,600 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-10-21 17:05:24,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:05:24,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:05:24,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:05:24,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:05:24,600 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo SpringContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:37,928 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:05:38,281 [http-nio-8888-exec-1] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:05:38,287 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:38,364 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.util.logging.LoggerFactory (LoggerFactory.java:29) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-10-21 17:05:38,367 [http-nio-8888-exec-1] INFO  org.hibernate.validator.internal.util.Version (Version.java:27) - HV000001: Hibernate Validator 5.1.1.Final
2015-10-21 17:05:38,393 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.engine.resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:74) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2015-10-21 17:05:38,423 [http-nio-8888-exec-1] ERROR com.alibaba.dubbo.rpc.filter.ExceptionFilter (ExceptionFilter.java:118) -  [DUBBO] Got unchecked and undeclared exception which called by 0:0:0:0:0:0:0:1. service: com.sf.nirvana.template.service.demo.DemoRestService, method: getDemo, exception: com.alibaba.dubbo.rpc.RpcException: Unable to instantiate Configuration., dubbo version: sf.2.0.0, current host: 127.0.0.1
com.alibaba.dubbo.rpc.RpcException: Unable to instantiate Configuration.
	at com.alibaba.dubbo.validation.filter.ValidationFilter.invoke(ValidationFilter.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:64)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:70)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy0.getDemo(proxy0.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:137)
	at org.jboss.resteasy.core.ResourceMethodInvoker.invokeOnTarget(ResourceMethodInvoker.java:288)
	at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:242)
	at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:229)
	at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:356)
	at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:179)
	at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:220)
	at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:56)
	at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:51)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at com.alibaba.dubbo.rpc.protocol.rest.DubboHttpServer$RestHandler.handle(DubboHttpServer.java:86)
	at com.alibaba.dubbo.remoting.http.servlet.DispatcherServlet.service(DispatcherServlet.java:64)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:534)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1081)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)
	at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1566)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1523)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.validation.ValidationException: Unable to instantiate Configuration.
	at javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:279)
	at javax.validation.Validation.buildDefaultValidatorFactory(Validation.java:110)
	at com.alibaba.dubbo.validation.support.jvalidation.JValidator.<init>(JValidator.java:86)
	at com.alibaba.dubbo.validation.support.jvalidation.JValidation.createValidator(JValidation.java:31)
	at com.alibaba.dubbo.validation.support.AbstractValidation.getValidator(AbstractValidation.java:38)
	at com.alibaba.dubbo.validation.Validation$Adpative.getValidator(Validation$Adpative.java)
	at com.alibaba.dubbo.validation.filter.ValidationFilter.invoke(ValidationFilter.java:47)
	... 54 more
Caused by: javax.validation.ValidationException: HV000183: Unable to load 'javax.el.ExpressionFactory'. Check that you have the EL dependencies on the classpath
	at org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.<init>(ResourceBundleMessageInterpolator.java:172)
	at org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.<init>(ResourceBundleMessageInterpolator.java:118)
	at org.hibernate.validator.internal.engine.ConfigurationImpl.<init>(ConfigurationImpl.java:110)
	at org.hibernate.validator.internal.engine.ConfigurationImpl.<init>(ConfigurationImpl.java:86)
	at org.hibernate.validator.HibernateValidator.createGenericConfiguration(HibernateValidator.java:41)
	at javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:276)
	... 60 more
2015-10-21 17:05:38,439 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
Content-Type: text/plain; charset=UTF-8
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:38,449 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:82) -  [DUBBO] The contents of response body is: 
Internal server error: Unable to instantiate Configuration.
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:05:51,280 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:06:04,612 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:06:17,944 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:06:31,277 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 3ms
2015-10-21 17:06:44,608 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:06:57,940 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:07:11,277 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001c after 2ms
2015-10-21 17:08:33,837 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo Log4jContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:34,049 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:08:34,051 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:08:34,051 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:08:34,057 [main] INFO  org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:510) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@aff1e8: startup date [Wed Oct 21 17:08:34 CST 2015]; root of context hierarchy
2015-10-21 17:08:34,138 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:08:34,138 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:08:34,139 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:08:34,160 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring]
2015-10-21 17:08:34,160 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/META-INF/spring/*.xml]
2015-10-21 17:08:34,166 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring]
2015-10-21 17:08:34,166 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/META-INF/spring/*.xml]
2015-10-21 17:08:34,167 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring]
2015-10-21 17:08:34,167 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/META-INF/spring/*.xml]
2015-10-21 17:08:34,169 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]]
2015-10-21 17:08:34,170 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml]
2015-10-21 17:08:34,173 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:08:34,232 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2015-10-21 17:08:34,246 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-10-21 17:08:34,249 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:08:34,298 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
2015-10-21 17:08:34,306 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:08:34,319 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:08:34,337 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver (DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-10-21 17:08:34,364 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:08:34,365 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:08:34,365 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:08:34,370 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:231) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-10-21 17:08:34,375 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template]
2015-10-21 17:08:34,375 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,377 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,378 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,379 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template]
2015-10-21 17:08:34,379 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,380 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,381 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,383 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template]
2015-10-21 17:08:34,383 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,384 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,385 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,386 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,390 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template]
2015-10-21 17:08:34,390 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,392 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,393 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,395 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,396 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,397 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,398 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,407 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template]
2015-10-21 17:08:34,407 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,408 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,410 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,415 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:08:34,419 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo\DemoServiceTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\DemoServerMain.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl$1.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\DemoManager.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\DemoTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend\DemoTestExtend.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain\Demo.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoRestService.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoService.class]]
2015-10-21 17:08:34,492 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class]
2015-10-21 17:08:34,502 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class]
2015-10-21 17:08:34,506 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class]
2015-10-21 17:08:34,565 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0]
2015-10-21 17:08:34,566 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml]
2015-10-21 17:08:34,569 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:08:34,571 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2015-10-21 17:08:34,596 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-10-21 17:08:34,638 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:08:34,715 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml]
2015-10-21 17:08:34,719 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:08:34,721 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:08:34,733 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
2015-10-21 17:08:34,735 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:08:34,739 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-3.2.xsd
2015-10-21 17:08:34,746 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:08:34,814 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]
2015-10-21 17:08:34,817 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:08:34,819 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:08:34,830 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:08:34,832 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2015-10-21 17:08:34,832 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader (AbstractBeanDefinitionReader.java:216) - Loaded 19 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2015-10-21 17:08:34,832 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:540) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@aff1e8: org.springframework.beans.factory.support.DefaultListableBeanFactory@141a127: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0]; root of factory hierarchy
2015-10-21 17:08:34,891 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:08:34,891 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:08:34,928 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:08:34,934 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:08:34,934 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:08:34,934 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:08:34,935 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:08:34,988 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:08:34,988 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:08:35,064 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:08:35,064 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:08:35,064 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:08:35,066 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/framework/template/dao/mapper/**/*.class] to resources []
2015-10-21 17:08:35,066 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner (ClassPathMapperScanner.java:158) - No MyBatis mapper was found in '[com.sf.framework.template.dao.mapper]' package. Please check your configuration.
2015-10-21 17:08:35,067 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:08:35,067 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:08:35,072 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:08:35,086 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:08:35,086 [main] INFO  org.springframework.core.io.support.PropertiesLoaderSupport (PropertiesLoaderSupport.java:172) - Loading properties file from class path resource [jdbc.properties]
2015-10-21 17:08:35,095 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:08:35,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:08:35,097 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:08:35,097 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:08:35,097 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:08:35,097 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:08:35,098 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:08:35,098 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:08:35,099 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:08:35,099 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:08:35,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:08:35,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:08:35,108 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:08:35,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:08:35,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-10-21 17:08:35,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:08:35,109 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:08:35,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:08:35,124 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-10-21 17:08:35,139 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:08:35,143 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:807) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e37d76]
2015-10-21 17:08:35,146 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:831) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@28e5a7]
2015-10-21 17:08:35,152 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:598) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@141a127: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-10-21 17:08:35,152 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:08:35,152 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:08:35,155 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,155 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,158 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' to allow for resolving potential circular references
2015-10-21 17:08:35,165 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataPointcut'
2015-10-21 17:08:35,174 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataPointcut'
2015-10-21 17:08:35,174 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,205 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoRestServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:08:35,205 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoRestServiceImpl' to allow for resolving potential circular references
2015-10-21 17:08:35,209 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoRestServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:08:35,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,232 [main] DEBUG org.apache.ibatis.logging.LogFactory (LogFactory.java:128) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2015-10-21 17:08:35,235 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoManagerImpl'
2015-10-21 17:08:35,235 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoManagerImpl'
2015-10-21 17:08:35,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,238 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoManagerImpl' to allow for resolving potential circular references
2015-10-21 17:08:35,244 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,245 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,476 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataAdvice'
2015-10-21 17:08:35,476 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataAdvice'
2015-10-21 17:08:35,481 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataAdvice' to allow for resolving potential circular references
2015-10-21 17:08:35,486 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'transactionManager'
2015-10-21 17:08:35,486 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'transactionManager'
2015-10-21 17:08:35,486 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,495 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-10-21 17:08:35,501 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataSource'
2015-10-21 17:08:35,501 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataSource'
2015-10-21 17:08:35,501 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,537 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-10-21 17:08:35,576 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,577 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,654 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataSource'
2015-10-21 17:08:35,656 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-10-21 17:08:35,656 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,656 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,659 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'transactionManager'
2015-10-21 17:08:35,659 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean '(inner bean)'
2015-10-21 17:08:35,660 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,667 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:08:35,667 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:08:35,667 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:08:35,667 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:08:35,667 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:08:35,668 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:08:35,668 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [select*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:08:35,668 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [query*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:08:35,668 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [get*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:08:35,668 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,668 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,670 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean '(inner bean)'
2015-10-21 17:08:35,670 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'dataAdvice'
2015-10-21 17:08:35,670 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataAdvice'
2015-10-21 17:08:35,688 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator (AbstractAutoProxyCreator.java:538) - Creating implicit proxy for bean 'demoManagerImpl' with 0 common interceptors and 2 specific interceptors
2015-10-21 17:08:35,690 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl@8407f8]
2015-10-21 17:08:35,695 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoManagerImpl'
2015-10-21 17:08:35,695 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoRestServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:08:35,696 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,696 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,700 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:08:35,700 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoServiceImpl'
2015-10-21 17:08:35,700 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoServiceImpl'
2015-10-21 17:08:35,700 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,703 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:08:35,703 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoServiceImpl' to allow for resolving potential circular references
2015-10-21 17:08:35,705 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:08:35,706 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:08:35,706 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:08:35,706 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,706 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoServiceImpl'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'rest'
2015-10-21 17:08:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'rest'
2015-10-21 17:08:35,708 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,710 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'rest' to allow for resolving potential circular references
2015-10-21 17:08:35,717 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,718 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,722 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'rest'
2015-10-21 17:08:35,722 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:08:35,722 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:08:35,722 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:35,725 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:35,999 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,021 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoService' to allow for resolving potential circular references
2015-10-21 17:08:36,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoServiceImpl'
2015-10-21 17:08:36,057 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:08:36,059 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,059 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,090 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:08:36,090 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:08:36,090 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:08:36,090 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,093 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoRestService' to allow for resolving potential circular references
2015-10-21 17:08:36,093 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:08:36,093 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'rest'
2015-10-21 17:08:36,093 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:08:36,094 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'transactionManager'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataAdvice'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:08:36,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'sqlSessionFactory'
2015-10-21 17:08:36,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2015-10-21 17:08:36,106 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db]
2015-10-21 17:08:36,106 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:08:36,107 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:08:36,108 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:08:36,109 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:/sqlmap/db/**/*Mapper.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]]
2015-10-21 17:08:36,109 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:08:36,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2015-10-21 17:08:36,110 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:362) - Property 'configLocation' not specified, using default MyBatis Configuration
2015-10-21 17:08:36,337 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml]'
2015-10-21 17:08:36,358 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]'
2015-10-21 17:08:36,361 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,361 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:08:36,364 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'sqlSessionFactory'
2015-10-21 17:08:36,365 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:08:36,365 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:08:36,366 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:858) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1eee418]
2015-10-21 17:08:36,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:08:36,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:08:36,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:08:36,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:08:36,369 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,482 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,510 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,528 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,548 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,548 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,548 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoService url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406 to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=4568&registry=zookeeper&timestamp=1445418516382, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,557 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,568 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,602 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,635 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,672 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,727 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Using select timeout of 500, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,727 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Epoll-bug workaround enabled = false, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,826 [main] INFO  com.alibaba.dubbo.remoting.transport.AbstractServer (AbstractServer.java:70) -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.118.45.69:20880, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,833 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,849 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:232) -  [DUBBO] Load registry store file d:\user\709166\.dubbo\dubbo-registry-10.202.4.179.cache, data: {com.sf.nirvana.template.service.demo.DemoRestService=empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9520&server=tomcat&side=provider&threads=500&timestamp=1445418323323&validation=true, com.sf.nirvana.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=6368&side=provider&timestamp=1444802610435, com.sf.nirvana.test.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.test.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.test.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=8284&side=provider&timestamp=1444803114507, com.sf.framework.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.framework.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.framework.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9040&side=provider&timestamp=1444793216887, com.sf.nirvana.template.service.demo.DemoService=empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9520&side=provider&timestamp=1445418322483}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,876 [main] DEBUG org.I0Itec.zkclient.ZkConnection (ZkConnection.java:63) - Creating new ZookKeeper instance to connect to 10.202.4.179:2181.
2015-10-21 17:08:36,878 [ZkClient-EventThread-19-10.202.4.179:2181] INFO  org.I0Itec.zkclient.ZkEventThread (ZkEventThread.java:64) - Starting ZkClient event thread.
2015-10-21 17:08:36,894 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2015-10-21 17:08:36,894 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:host.name=HQSFTCSFIT0480A.sf.com
2015-10-21 17:08:36,894 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.version=1.7.0_60
2015-10-21 17:08:36,894 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.vendor=Oracle Corporation
2015-10-21 17:08:36,894 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.home=C:\Program Files\Java\jdk1.7.0_60\jre
2015-10-21 17:08:36,894 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.class.path=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-common\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context-support\3.2.8.RELEASE\spring-context-support-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-jdbc\3.2.8.RELEASE\spring-jdbc-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-tx\3.2.8.RELEASE\spring-tx-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-oxm\3.2.8.RELEASE\spring-oxm-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\mysql\mysql-connector-java\5.1.8\mysql-connector-java-5.1.8.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\druid\1.0.6\druid-1.0.6.jar;C:\Program Files\Java\jdk1.7.0_60\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0_60\lib\tools.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-web\3.2.8.RELEASE\spring-web-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sap-esb-interface_20150129.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sftpClient-1.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\jcraft\jsch\0.1.53\jsch-0.1.53.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\lingala\zip4j\zip4j\1.3.2\zip4j-1.3.2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\com\sf\framework\sf-framework-common\1.0.0\sf-framework-common-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator\5.1.1.Final\hibernate-validator-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\classmate\1.0.0\classmate-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator-annotation-processor\5.1.1.Final\hibernate-validator-annotation-processor-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\jackson\core\jackson-annotations\2.5.3\jackson-annotations-2.5.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\dubbo\sf.2.0.0\dubbo-sf.2.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-beans\3.2.8.RELEASE\spring-beans-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-core\3.2.8.RELEASE\spring-core-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context\3.2.8.RELEASE\spring-context-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-aop\3.2.8.RELEASE\spring-aop-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-expression\3.2.8.RELEASE\spring-expression-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpclient\4.2.1\httpclient-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpcore\4.2.1\httpcore-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\google\guava\guava\18.0\guava-18.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\101tec\zkclient\0.4\zkclient-0.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\opensymphony\quartz\quartz-all\1.6.1\quartz-all-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\activation\activation\1.1\activation-1.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-io\commons-io\2.1\commons-io-2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-core-asl\1.9.4\jackson-core-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-mapper-asl\1.9.4\jackson-mapper-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-jaxrs\1.9.4\jackson-jaxrs-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\junit\junit\4.11\junit-4.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-test\3.2.8.RELEASE\spring-test-3.2.8.RELEASE.jar
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.7.0_60\jre\bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/lib/i386;C:\Program Files\Java\jdk1.7.0_60\bin;D:\Program Files\apache-maven-3.2.1\bin;D:\Program Files\apache-cxf-3.0.2\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;D:\Program Files\TortoiseSVN\bin;D:\Program Files\TortoiseGit\bin;C:\Program Files\Common Files\NetSarang;;D:\eclipse-jee-luna;;.
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.io.tmpdir=C:\Users\709166\AppData\Local\Temp\
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.compiler=<NA>
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.name=Windows 7
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.arch=x86
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.version=6.1
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.name=709166
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.home=d:\user\709166
2015-10-21 17:08:36,895 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.dir=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service
2015-10-21 17:08:36,899 [main] INFO  org.apache.zookeeper.ZooKeeper (ZooKeeper.java:438) - Initiating client connection, connectString=10.202.4.179:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@1791d43
2015-10-21 17:08:36,904 [main] DEBUG org.apache.zookeeper.ClientCnxn (ClientCnxn.java:102) - zookeeper.disableAutoWatchReset is false
2015-10-21 17:08:36,924 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:893) - Awaiting connection to Zookeeper server
2015-10-21 17:08:36,924 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:643) - Waiting for keeper state SyncConnected
2015-10-21 17:08:36,932 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:975) - Opening socket connection to server 10.202.4.179/10.202.4.179:2181. Will not attempt to authenticate using SASL (unknown error)
2015-10-21 17:08:36,935 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:852) - Socket connection established to 10.202.4.179/10.202.4.179:2181, initiating session
2015-10-21 17:08:36,937 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:892) - Session establishment request sent on 10.202.4.179/10.202.4.179:2181
2015-10-21 17:08:36,944 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:1235) - Session establishment complete on server 10.202.4.179/10.202.4.179:2181, sessionid = 0x15060f0f114001d, negotiated timeout = 40000
2015-10-21 17:08:36,947 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:351) - Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-21 17:08:36,947 [main-EventThread] INFO  org.I0Itec.zkclient.ZkClient (ZkClient.java:449) - zookeeper state changed (SyncConnected)
2015-10-21 17:08:36,947 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:395) - Leaving process event
2015-10-21 17:08:36,947 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:653) - State is SyncConnected
2015-10-21 17:08:36,949 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,968 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,559,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:36,983 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,560,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:36,985 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,561,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:36,988 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,562,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D4568%2526side%253Dprovider%2526timestamp%253D1445418516406,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D4568%2526side%253Dprovider%2526timestamp%253D1445418516406 
2015-10-21 17:08:36,989 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:36,994 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,563,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:36,997 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,564,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:37,000 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,565,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:37,007 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,565,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: s{458,458,1445417494258,1445417494258,0,0,0,0,0,0,458} 
2015-10-21 17:08:37,012 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,565,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: v{} 
2015-10-21 17:08:37,012 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406, urls: [empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,024 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,040 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,052 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoRestService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,063 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,093 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,093 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:37,093 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoRestService url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=4568&registry=zookeeper&timestamp=1445418517056, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:38,344 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:38,350 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,566,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:38,353 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,567,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:38,357 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,568,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:38,361 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,569,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D4568%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418517079%2526validation%253Dtrue,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D4568%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418517079%2526validation%253Dtrue 
2015-10-21 17:08:38,361 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:38,366 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,570,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:38,370 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,571,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:38,372 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,572,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:08:38,374 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,572,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: s{507,507,1445417810227,1445417810227,0,0,0,0,0,0,507} 
2015-10-21 17:08:38,376 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001d, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,572,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: v{} 
2015-10-21 17:08:38,376 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true, urls: [empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:38,383 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-10-21 17:08:38,383 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-10-21 17:08:38,383 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-10-21 17:08:38,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:08:38,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:08:38,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:08:38,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:08:38,384 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo SpringContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:42,754 [http-nio-8888-exec-1] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:08:42,759 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:08:42,805 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.util.logging.LoggerFactory (LoggerFactory.java:29) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-10-21 17:08:42,805 [http-nio-8888-exec-1] INFO  org.hibernate.validator.internal.util.Version (Version.java:27) - HV000001: Hibernate Validator 5.1.1.Final
2015-10-21 17:08:42,821 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.engine.resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:74) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2015-10-21 17:08:42,852 [http-nio-8888-exec-1] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser (ValidationXmlParser.java:88) - Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-10-21 17:08:42,863 [http-nio-8888-exec-1] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser (ValidationXmlParser.java:95) - No META-INF/validation.xml found. Using annotation based configuration only.
2015-10-21 17:08:51,714 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001d after 3ms
2015-10-21 17:08:54,129 [http-nio-8888-exec-1] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager (AbstractPlatformTransactionManager.java:862) - Should roll back transaction but cannot - no transaction available
2015-10-21 17:08:57,610 [http-nio-8888-exec-1] ERROR com.alibaba.dubbo.rpc.filter.ExceptionFilter (ExceptionFilter.java:87) -  [DUBBO] Got unchecked and undeclared exception which called by 0:0:0:0:0:0:0:1. service: com.sf.nirvana.template.service.demo.DemoRestService, method: getDemo, exception: java.lang.NullPointerException: null, dubbo version: sf.2.0.0, current host: 127.0.0.1
java.lang.NullPointerException
	at com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.selectAll(DemoManagerImpl.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:96)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at com.sun.proxy.$Proxy11.selectAll(Unknown Source)
	at com.sf.nirvana.template.service.demo.DemoRestServiceImpl.getDemo(DemoRestServiceImpl.java:23)
	at com.alibaba.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:46)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:72)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:53)
	at com.alibaba.dubbo.validation.filter.ValidationFilter.invoke(ValidationFilter.java:57)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:64)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:70)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:132)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:52)
	at com.alibaba.dubbo.common.bytecode.proxy0.getDemo(proxy0.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:137)
	at org.jboss.resteasy.core.ResourceMethodInvoker.invokeOnTarget(ResourceMethodInvoker.java:288)
	at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:242)
	at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:229)
	at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:356)
	at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:179)
	at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:220)
	at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:56)
	at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:51)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at com.alibaba.dubbo.rpc.protocol.rest.DubboHttpServer$RestHandler.handle(DubboHttpServer.java:86)
	at com.alibaba.dubbo.remoting.http.servlet.DispatcherServlet.service(DispatcherServlet.java:64)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:534)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1081)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)
	at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1566)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1523)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2015-10-21 17:09:05,050 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001d after 3ms
2015-10-21 17:09:18,386 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001d after 3ms
2015-10-21 17:09:44,366 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo Log4jContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:09:44,481 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:09:44,483 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:09:44,483 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:09:44,488 [main] INFO  org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:510) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@c91629: startup date [Wed Oct 21 17:09:44 CST 2015]; root of context hierarchy
2015-10-21 17:09:44,559 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:09:44,559 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:09:44,560 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:09:44,577 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring]
2015-10-21 17:09:44,577 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/META-INF/spring/*.xml]
2015-10-21 17:09:44,581 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring]
2015-10-21 17:09:44,582 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/META-INF/spring/*.xml]
2015-10-21 17:09:44,583 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring]
2015-10-21 17:09:44,583 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/META-INF/spring/*.xml]
2015-10-21 17:09:44,585 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]]
2015-10-21 17:09:44,586 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml]
2015-10-21 17:09:44,589 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:09:44,617 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2015-10-21 17:09:44,631 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-10-21 17:09:44,633 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:09:44,665 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
2015-10-21 17:09:44,669 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:09:44,679 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:09:44,696 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver (DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-10-21 17:09:44,720 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:09:44,720 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:09:44,720 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:09:44,726 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:231) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-10-21 17:09:44,730 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template]
2015-10-21 17:09:44,730 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,731 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,732 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,734 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template]
2015-10-21 17:09:44,734 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,735 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,736 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,737 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template]
2015-10-21 17:09:44,738 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,739 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,740 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,740 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,742 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template]
2015-10-21 17:09:44,742 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,743 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,743 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,744 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,745 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,746 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,747 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,748 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template]
2015-10-21 17:09:44,749 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,750 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,752 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,753 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:09:44,754 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo\DemoServiceTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\DemoServerMain.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl$1.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\DemoManager.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\DemoTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend\DemoTestExtend.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain\Demo.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoRestService.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoService.class]]
2015-10-21 17:09:44,796 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class]
2015-10-21 17:09:44,798 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class]
2015-10-21 17:09:44,806 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class]
2015-10-21 17:09:44,850 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0]
2015-10-21 17:09:44,850 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml]
2015-10-21 17:09:44,853 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:09:44,855 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2015-10-21 17:09:44,871 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-10-21 17:09:44,899 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:09:44,965 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml]
2015-10-21 17:09:44,968 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:09:44,971 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:09:44,979 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
2015-10-21 17:09:44,981 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:09:44,986 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-3.2.xsd
2015-10-21 17:09:44,989 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:09:45,039 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]
2015-10-21 17:09:45,043 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:09:45,045 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:09:45,053 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:09:45,055 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2015-10-21 17:09:45,055 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader (AbstractBeanDefinitionReader.java:216) - Loaded 19 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2015-10-21 17:09:45,055 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:540) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@c91629: org.springframework.beans.factory.support.DefaultListableBeanFactory@15eddd8: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0]; root of factory hierarchy
2015-10-21 17:09:45,098 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:09:45,098 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:09:45,120 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:09:45,122 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:09:45,123 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:09:45,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:09:45,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:09:45,162 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:09:45,162 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:09:45,218 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:09:45,218 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:09:45,218 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:09:45,220 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/framework/template/dao/mapper/**/*.class] to resources []
2015-10-21 17:09:45,220 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner (ClassPathMapperScanner.java:158) - No MyBatis mapper was found in '[com.sf.framework.template.dao.mapper]' package. Please check your configuration.
2015-10-21 17:09:45,221 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:09:45,222 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:09:45,224 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:09:45,233 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:09:45,233 [main] INFO  org.springframework.core.io.support.PropertiesLoaderSupport (PropertiesLoaderSupport.java:172) - Loading properties file from class path resource [jdbc.properties]
2015-10-21 17:09:45,240 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:09:45,240 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:09:45,241 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:09:45,242 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:09:45,242 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:09:45,242 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:09:45,242 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:09:45,242 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:09:45,242 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:09:45,243 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:09:45,247 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:09:45,247 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:09:45,248 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:09:45,248 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:09:45,248 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-10-21 17:09:45,248 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:09:45,248 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:09:45,248 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:09:45,258 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-10-21 17:09:45,268 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:09:45,271 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:807) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@19c7bfc]
2015-10-21 17:09:45,273 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:831) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15679f0]
2015-10-21 17:09:45,276 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:598) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15eddd8: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-10-21 17:09:45,276 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:09:45,276 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:09:45,277 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:09:45,277 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:09:45,278 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' to allow for resolving potential circular references
2015-10-21 17:09:45,286 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataPointcut'
2015-10-21 17:09:45,292 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataPointcut'
2015-10-21 17:09:45,292 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:09:45,305 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoRestServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:09:45,305 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoRestServiceImpl' to allow for resolving potential circular references
2015-10-21 17:09:45,307 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoRestServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:09:45,309 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:09:45,326 [main] DEBUG org.apache.ibatis.logging.LogFactory (LogFactory.java:128) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2015-10-21 17:09:45,329 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoManagerImpl'
2015-10-21 17:09:45,329 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoManagerImpl'
2015-10-21 17:09:45,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:09:45,332 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl]: AutowiredFieldElement for private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper
2015-10-21 17:09:45,333 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoManagerImpl' to allow for resolving potential circular references
2015-10-21 17:09:45,334 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoManagerImpl': AutowiredFieldElement for private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper
2015-10-21 17:09:45,336 [main] INFO  org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:444) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15eddd8: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-10-21 17:09:45,342 [main] ERROR com.alibaba.dubbo.container.Main (Main.java:86) -  [DUBBO] Error creating bean with name 'demoRestServiceImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoManagerImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}, dubbo version: sf.2.0.0, current host: 127.0.0.1
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoRestServiceImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoManagerImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:628)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.alibaba.dubbo.container.spring.SpringContainer.start(SpringContainer.java:50)
	at com.alibaba.dubbo.container.Main.main(Main.java:80)
	at com.sf.nirvana.template.service.DemoServerMain.main(DemoServerMain.java:8)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoManagerImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:517)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	... 15 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoManagerImpl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:912)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:855)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:770)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	... 17 more
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:517)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:988)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:858)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:770)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	... 30 more
2015-10-21 17:09:45,359 [DubboShutdownHook] INFO  com.alibaba.dubbo.config.AbstractConfig$1 (AbstractConfig.java:450) -  [DUBBO] Run shutdown hook now., dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:09:45,362 [DubboShutdownHook] INFO  com.alibaba.dubbo.registry.support.AbstractRegistryFactory (AbstractRegistryFactory.java:63) -  [DUBBO] Close all registries [], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:08,597 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo Log4jContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:08,701 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:11:08,703 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:11:08,703 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:11:08,706 [main] INFO  org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:510) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@217dc8: startup date [Wed Oct 21 17:11:08 CST 2015]; root of context hierarchy
2015-10-21 17:11:08,765 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:11:08,765 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:11:08,765 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:11:08,779 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring]
2015-10-21 17:11:08,779 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/META-INF/spring/*.xml]
2015-10-21 17:11:08,783 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring]
2015-10-21 17:11:08,783 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/META-INF/spring/*.xml]
2015-10-21 17:11:08,785 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring]
2015-10-21 17:11:08,785 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/META-INF/spring/*.xml]
2015-10-21 17:11:08,786 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]]
2015-10-21 17:11:08,787 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml]
2015-10-21 17:11:08,790 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:11:08,813 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2015-10-21 17:11:08,827 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-10-21 17:11:08,830 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:11:08,860 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
2015-10-21 17:11:08,864 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:11:08,879 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:11:08,902 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver (DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-10-21 17:11:08,935 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:11:08,935 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:11:08,935 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:11:08,943 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:231) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-10-21 17:11:08,947 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template]
2015-10-21 17:11:08,948 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,949 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,950 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,951 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template]
2015-10-21 17:11:08,951 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,952 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,953 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,955 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template]
2015-10-21 17:11:08,955 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,956 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,957 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,958 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,959 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template]
2015-10-21 17:11:08,960 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,961 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,962 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,962 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,963 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,965 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,965 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,967 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template]
2015-10-21 17:11:08,967 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,968 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,969 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,970 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:11:08,971 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo\DemoServiceTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\DemoServerMain.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl$1.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\DemoManager.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\DemoTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend\DemoTestExtend.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain\Demo.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoRestService.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoService.class]]
2015-10-21 17:11:09,012 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class]
2015-10-21 17:11:09,015 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class]
2015-10-21 17:11:09,017 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class]
2015-10-21 17:11:09,061 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0]
2015-10-21 17:11:09,061 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml]
2015-10-21 17:11:09,064 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:11:09,066 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2015-10-21 17:11:09,078 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-10-21 17:11:09,094 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:11:09,148 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml]
2015-10-21 17:11:09,151 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:11:09,153 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:11:09,164 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
2015-10-21 17:11:09,166 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:11:09,169 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-3.2.xsd
2015-10-21 17:11:09,172 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:11:09,223 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]
2015-10-21 17:11:09,226 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:11:09,229 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:11:09,236 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:11:09,238 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2015-10-21 17:11:09,239 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader (AbstractBeanDefinitionReader.java:216) - Loaded 19 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2015-10-21 17:11:09,239 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:540) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@217dc8: org.springframework.beans.factory.support.DefaultListableBeanFactory@c86119: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0]; root of factory hierarchy
2015-10-21 17:11:09,281 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:11:09,281 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:11:09,303 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:11:09,305 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:11:09,306 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:11:09,306 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:11:09,306 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:11:09,346 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:11:09,346 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:11:09,400 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:11:09,400 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:11:09,401 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:11:09,402 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper]
2015-10-21 17:11:09,402 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/dao/mapper/**/*.class]
2015-10-21 17:11:09,403 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/dao/mapper/**/*.class]
2015-10-21 17:11:09,404 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/dao/mapper/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class]]
2015-10-21 17:11:09,406 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class]
2015-10-21 17:11:09,406 [main] DEBUG org.mybatis.spring.mapper.ClassPathMapperScanner (ClassPathMapperScanner.java:164) - Creating MapperFactoryBean with name 'demoTestMapper' and 'com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper' mapperInterface
2015-10-21 17:11:09,409 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:11:09,409 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:11:09,411 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:11:09,420 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:11:09,420 [main] INFO  org.springframework.core.io.support.PropertiesLoaderSupport (PropertiesLoaderSupport.java:172) - Loading properties file from class path resource [jdbc.properties]
2015-10-21 17:11:09,427 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:11:09,427 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:11:09,428 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:11:09,428 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:11:09,428 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:11:09,429 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:11:09,429 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:11:09,429 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:11:09,429 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:11:09,429 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:11:09,434 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:11:09,434 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:11:09,434 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:11:09,435 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:11:09,435 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-10-21 17:11:09,435 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:11:09,435 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:11:09,435 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:11:09,445 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-10-21 17:11:09,455 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:11:09,457 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:807) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@9c8f13]
2015-10-21 17:11:09,460 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:831) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1318309]
2015-10-21 17:11:09,463 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:598) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@c86119: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,demoTestMapper]; root of factory hierarchy
2015-10-21 17:11:09,463 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:11:09,463 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:11:09,464 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,464 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,465 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' to allow for resolving potential circular references
2015-10-21 17:11:09,472 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataPointcut'
2015-10-21 17:11:09,480 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataPointcut'
2015-10-21 17:11:09,480 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,492 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoRestServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:11:09,492 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoRestServiceImpl' to allow for resolving potential circular references
2015-10-21 17:11:09,494 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoRestServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:11:09,496 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,513 [main] DEBUG org.apache.ibatis.logging.LogFactory (LogFactory.java:128) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2015-10-21 17:11:09,515 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,516 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoTestMapper'
2015-10-21 17:11:09,516 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoTestMapper'
2015-10-21 17:11:09,517 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoTestMapper' to allow for resolving potential circular references
2015-10-21 17:11:09,526 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:11:09,526 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'sqlSessionFactory'
2015-10-21 17:11:09,530 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2015-10-21 17:11:09,534 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db]
2015-10-21 17:11:09,534 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:11:09,535 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:11:09,536 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:11:09,537 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:/sqlmap/db/**/*Mapper.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]]
2015-10-21 17:11:09,537 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataSource'
2015-10-21 17:11:09,537 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataSource'
2015-10-21 17:11:09,537 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,565 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-10-21 17:11:09,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:09,840 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataSource'
2015-10-21 17:11:09,844 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2015-10-21 17:11:09,844 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:362) - Property 'configLocation' not specified, using default MyBatis Configuration
2015-10-21 17:11:10,036 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml]'
2015-10-21 17:11:10,056 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]'
2015-10-21 17:11:10,057 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,057 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,060 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'sqlSessionFactory'
2015-10-21 17:11:10,060 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,060 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,073 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'demoTestMapper'
2015-10-21 17:11:10,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,075 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoTestMapper'
2015-10-21 17:11:10,075 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoManagerImpl'
2015-10-21 17:11:10,075 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoManagerImpl'
2015-10-21 17:11:10,075 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,077 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl]: AutowiredFieldElement for private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper
2015-10-21 17:11:10,077 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoManagerImpl' to allow for resolving potential circular references
2015-10-21 17:11:10,079 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoManagerImpl': AutowiredFieldElement for private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper
2015-10-21 17:11:10,080 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoTestMapper'
2015-10-21 17:11:10,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,086 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoManagerImpl' to bean named 'demoTestMapper'
2015-10-21 17:11:10,086 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,086 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,087 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataAdvice'
2015-10-21 17:11:10,087 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataAdvice'
2015-10-21 17:11:10,089 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataAdvice' to allow for resolving potential circular references
2015-10-21 17:11:10,096 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'transactionManager'
2015-10-21 17:11:10,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'transactionManager'
2015-10-21 17:11:10,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-10-21 17:11:10,105 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:11:10,105 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-10-21 17:11:10,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'transactionManager'
2015-10-21 17:11:10,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean '(inner bean)'
2015-10-21 17:11:10,108 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,114 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:11:10,115 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:11:10,115 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:11:10,115 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:11:10,115 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:11:10,115 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:11:10,115 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [select*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:11:10,116 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [query*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:11:10,116 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [get*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:11:10,116 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,116 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,117 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean '(inner bean)'
2015-10-21 17:11:10,117 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'dataAdvice'
2015-10-21 17:11:10,118 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataAdvice'
2015-10-21 17:11:10,129 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator (AbstractAutoProxyCreator.java:538) - Creating implicit proxy for bean 'demoManagerImpl' with 0 common interceptors and 2 specific interceptors
2015-10-21 17:11:10,131 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl@91e63d]
2015-10-21 17:11:10,135 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoManagerImpl'
2015-10-21 17:11:10,135 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoRestServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:11:10,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,140 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:11:10,141 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoServiceImpl'
2015-10-21 17:11:10,141 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoServiceImpl'
2015-10-21 17:11:10,141 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,143 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:11:10,143 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoServiceImpl' to allow for resolving potential circular references
2015-10-21 17:11:10,147 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:11:10,147 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:11:10,147 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:11:10,147 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,148 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,148 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoServiceImpl'
2015-10-21 17:11:10,148 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:11:10,148 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'rest'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'rest'
2015-10-21 17:11:10,149 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,154 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'rest' to allow for resolving potential circular references
2015-10-21 17:11:10,160 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,160 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,164 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'rest'
2015-10-21 17:11:10,164 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:11:10,164 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:11:10,164 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,167 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,366 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,383 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoService' to allow for resolving potential circular references
2015-10-21 17:11:10,400 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoServiceImpl'
2015-10-21 17:11:10,402 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:11:10,403 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,403 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,416 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:11:10,416 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:11:10,416 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:11:10,416 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,419 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoRestService' to allow for resolving potential circular references
2015-10-21 17:11:10,419 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:11:10,419 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'rest'
2015-10-21 17:11:10,420 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:11:10,420 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,421 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,421 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:11:10,421 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'transactionManager'
2015-10-21 17:11:10,422 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataAdvice'
2015-10-21 17:11:10,422 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:11:10,422 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:11:10,422 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:11:10,422 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:11:10,422 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:11:10,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:11:10,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoTestMapper'
2015-10-21 17:11:10,424 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:858) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@c7e8af]
2015-10-21 17:11:10,424 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:11:10,426 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:11:10,426 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:11:10,426 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:11:10,427 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,583 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,599 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,618 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,632 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,633 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,633 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoService url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479 to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=1588&registry=zookeeper&timestamp=1445418670441, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,642 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,656 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,684 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,709 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,724 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,774 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Using select timeout of 500, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,774 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Epoll-bug workaround enabled = false, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,852 [main] INFO  com.alibaba.dubbo.remoting.transport.AbstractServer (AbstractServer.java:70) -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.118.45.69:20880, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,861 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,877 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:232) -  [DUBBO] Load registry store file d:\user\709166\.dubbo\dubbo-registry-10.202.4.179.cache, data: {com.sf.nirvana.template.service.demo.DemoRestService=empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=4568&server=tomcat&side=provider&threads=500&timestamp=1445418517079&validation=true, com.sf.nirvana.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=6368&side=provider&timestamp=1444802610435, com.sf.nirvana.test.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.test.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.test.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=8284&side=provider&timestamp=1444803114507, com.sf.framework.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.framework.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.framework.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9040&side=provider&timestamp=1444793216887, com.sf.nirvana.template.service.demo.DemoService=empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=4568&side=provider&timestamp=1445418516406}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,894 [main] DEBUG org.I0Itec.zkclient.ZkConnection (ZkConnection.java:63) - Creating new ZookKeeper instance to connect to 10.202.4.179:2181.
2015-10-21 17:11:10,903 [ZkClient-EventThread-16-10.202.4.179:2181] INFO  org.I0Itec.zkclient.ZkEventThread (ZkEventThread.java:64) - Starting ZkClient event thread.
2015-10-21 17:11:10,905 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2015-10-21 17:11:10,906 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:host.name=HQSFTCSFIT0480A.sf.com
2015-10-21 17:11:10,906 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.version=1.7.0_60
2015-10-21 17:11:10,906 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.vendor=Oracle Corporation
2015-10-21 17:11:10,906 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.home=C:\Program Files\Java\jdk1.7.0_60\jre
2015-10-21 17:11:10,906 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.class.path=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-common\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context-support\3.2.8.RELEASE\spring-context-support-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-jdbc\3.2.8.RELEASE\spring-jdbc-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-tx\3.2.8.RELEASE\spring-tx-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-oxm\3.2.8.RELEASE\spring-oxm-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\mysql\mysql-connector-java\5.1.8\mysql-connector-java-5.1.8.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\druid\1.0.6\druid-1.0.6.jar;C:\Program Files\Java\jdk1.7.0_60\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0_60\lib\tools.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-web\3.2.8.RELEASE\spring-web-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sap-esb-interface_20150129.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sftpClient-1.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\jcraft\jsch\0.1.53\jsch-0.1.53.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\lingala\zip4j\zip4j\1.3.2\zip4j-1.3.2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\com\sf\framework\sf-framework-common\1.0.0\sf-framework-common-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator\5.1.1.Final\hibernate-validator-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\classmate\1.0.0\classmate-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator-annotation-processor\5.1.1.Final\hibernate-validator-annotation-processor-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\jackson\core\jackson-annotations\2.5.3\jackson-annotations-2.5.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\dubbo\sf.2.0.0\dubbo-sf.2.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-beans\3.2.8.RELEASE\spring-beans-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-core\3.2.8.RELEASE\spring-core-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context\3.2.8.RELEASE\spring-context-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-aop\3.2.8.RELEASE\spring-aop-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-expression\3.2.8.RELEASE\spring-expression-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpclient\4.2.1\httpclient-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpcore\4.2.1\httpcore-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\google\guava\guava\18.0\guava-18.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\101tec\zkclient\0.4\zkclient-0.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\opensymphony\quartz\quartz-all\1.6.1\quartz-all-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\activation\activation\1.1\activation-1.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-io\commons-io\2.1\commons-io-2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-core-asl\1.9.4\jackson-core-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-mapper-asl\1.9.4\jackson-mapper-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-jaxrs\1.9.4\jackson-jaxrs-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\junit\junit\4.11\junit-4.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-test\3.2.8.RELEASE\spring-test-3.2.8.RELEASE.jar
2015-10-21 17:11:10,909 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/lib/i386;C:\Program Files\Java\jdk1.7.0_60\bin;D:\Program Files\apache-maven-3.2.1\bin;D:\Program Files\apache-cxf-3.0.2\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;D:\Program Files\TortoiseSVN\bin;D:\Program Files\TortoiseGit\bin;C:\Program Files\Common Files\NetSarang;;D:\eclipse-jee-luna;;.
2015-10-21 17:11:10,909 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.io.tmpdir=C:\Users\709166\AppData\Local\Temp\
2015-10-21 17:11:10,909 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.compiler=<NA>
2015-10-21 17:11:10,909 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.name=Windows 7
2015-10-21 17:11:10,909 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.arch=x86
2015-10-21 17:11:10,909 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.version=6.1
2015-10-21 17:11:10,910 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.name=709166
2015-10-21 17:11:10,910 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.home=d:\user\709166
2015-10-21 17:11:10,910 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.dir=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service
2015-10-21 17:11:10,913 [main] INFO  org.apache.zookeeper.ZooKeeper (ZooKeeper.java:438) - Initiating client connection, connectString=10.202.4.179:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@3a631b
2015-10-21 17:11:10,918 [main] DEBUG org.apache.zookeeper.ClientCnxn (ClientCnxn.java:102) - zookeeper.disableAutoWatchReset is false
2015-10-21 17:11:10,929 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:893) - Awaiting connection to Zookeeper server
2015-10-21 17:11:10,930 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:643) - Waiting for keeper state SyncConnected
2015-10-21 17:11:10,933 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:975) - Opening socket connection to server 10.202.4.179/10.202.4.179:2181. Will not attempt to authenticate using SASL (unknown error)
2015-10-21 17:11:10,938 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:852) - Socket connection established to 10.202.4.179/10.202.4.179:2181, initiating session
2015-10-21 17:11:10,940 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:892) - Session establishment request sent on 10.202.4.179/10.202.4.179:2181
2015-10-21 17:11:10,948 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:1235) - Session establishment complete on server 10.202.4.179/10.202.4.179:2181, sessionid = 0x15060f0f114001e, negotiated timeout = 40000
2015-10-21 17:11:10,950 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:351) - Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-21 17:11:10,950 [main-EventThread] INFO  org.I0Itec.zkclient.ZkClient (ZkClient.java:449) - zookeeper state changed (SyncConnected)
2015-10-21 17:11:10,950 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:395) - Leaving process event
2015-10-21 17:11:10,950 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:653) - State is SyncConnected
2015-10-21 17:11:10,952 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:10,966 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,575,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:10,981 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,576,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:10,986 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,577,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:10,992 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,578,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D1588%2526side%253Dprovider%2526timestamp%253D1445418670479,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D1588%2526side%253Dprovider%2526timestamp%253D1445418670479 
2015-10-21 17:11:10,993 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,001 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,579,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:11,006 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,580,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:11,010 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,581,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:11,018 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,581,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: s{458,458,1445417494258,1445417494258,0,0,0,0,0,0,458} 
2015-10-21 17:11:11,024 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,581,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: v{} 
2015-10-21 17:11:11,025 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479, urls: [empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,034 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,043 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,055 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoRestService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,065 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,086 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,086 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:11,086 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoRestService url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=1588&registry=zookeeper&timestamp=1445418671058, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:12,026 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:12,031 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,582,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:12,035 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,583,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:12,038 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,584,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:12,045 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,585,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D1588%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418671074%2526validation%253Dtrue,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D1588%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418671074%2526validation%253Dtrue 
2015-10-21 17:11:12,046 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:12,049 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,586,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:12,053 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,587,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:12,056 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,588,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:11:12,059 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,588,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: s{507,507,1445417810227,1445417810227,0,0,0,0,0,0,507} 
2015-10-21 17:11:12,061 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001e, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,588,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: v{} 
2015-10-21 17:11:12,061 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true, urls: [empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:12,063 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-10-21 17:11:12,064 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-10-21 17:11:12,065 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-10-21 17:11:12,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:11:12,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:11:12,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:11:12,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:11:12,065 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo SpringContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:23,700 [http-nio-8888-exec-1] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:23,712 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:23,747 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.util.logging.LoggerFactory (LoggerFactory.java:29) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-10-21 17:11:23,748 [http-nio-8888-exec-1] INFO  org.hibernate.validator.internal.util.Version (Version.java:27) - HV000001: Hibernate Validator 5.1.1.Final
2015-10-21 17:11:23,757 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.engine.resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:74) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2015-10-21 17:11:23,772 [http-nio-8888-exec-1] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser (ValidationXmlParser.java:88) - Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-10-21 17:11:23,779 [http-nio-8888-exec-1] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser (ValidationXmlParser.java:95) - No META-INF/validation.xml found. Using annotation based configuration only.
2015-10-21 17:11:24,014 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:24,023 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8399b]
2015-10-21 17:11:24,037 [http-nio-8888-exec-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:24,357 [http-nio-8888-exec-1] INFO  com.alibaba.druid.pool.DruidDataSource (DruidDataSource.java:640) - {dataSource-1} inited
2015-10-21 17:11:24,361 [http-nio-8888-exec-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:24,364 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:24,374 [http-nio-8888-exec-1] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:24,431 [http-nio-8888-exec-1] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:24,457 [http-nio-8888-exec-1] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:24,458 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8399b]
2015-10-21 17:11:24,458 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8399b]
2015-10-21 17:11:24,458 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8399b]
2015-10-21 17:11:24,460 [http-nio-8888-exec-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:24,505 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:25,392 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001e after 2ms
2015-10-21 17:11:30,823 [http-nio-8888-exec-2] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:30,824 [http-nio-8888-exec-2] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:30,826 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:30,826 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c0ef]
2015-10-21 17:11:30,827 [http-nio-8888-exec-2] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:30,827 [http-nio-8888-exec-2] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:30,827 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:30,828 [http-nio-8888-exec-2] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:30,828 [http-nio-8888-exec-2] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:30,831 [http-nio-8888-exec-2] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:30,832 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c0ef]
2015-10-21 17:11:30,832 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c0ef]
2015-10-21 17:11:30,832 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c0ef]
2015-10-21 17:11:30,832 [http-nio-8888-exec-2] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:30,833 [http-nio-8888-exec-2] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:31,406 [http-nio-8888-exec-3] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:31,406 [http-nio-8888-exec-3] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:31,407 [http-nio-8888-exec-3] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:31,408 [http-nio-8888-exec-3] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@881bb2]
2015-10-21 17:11:31,408 [http-nio-8888-exec-3] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:31,408 [http-nio-8888-exec-3] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:31,408 [http-nio-8888-exec-3] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:31,409 [http-nio-8888-exec-3] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:31,409 [http-nio-8888-exec-3] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:31,417 [http-nio-8888-exec-3] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:31,417 [http-nio-8888-exec-3] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@881bb2]
2015-10-21 17:11:31,417 [http-nio-8888-exec-3] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@881bb2]
2015-10-21 17:11:31,418 [http-nio-8888-exec-3] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@881bb2]
2015-10-21 17:11:31,418 [http-nio-8888-exec-3] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:31,418 [http-nio-8888-exec-3] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:38,723 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001e after 2ms
2015-10-21 17:11:51,209 [http-nio-8888-exec-4] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:51,211 [http-nio-8888-exec-4] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:51,212 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:51,212 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@142f891]
2015-10-21 17:11:51,212 [http-nio-8888-exec-4] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:51,213 [http-nio-8888-exec-4] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:51,213 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:51,213 [http-nio-8888-exec-4] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:51,213 [http-nio-8888-exec-4] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:51,215 [http-nio-8888-exec-4] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:51,216 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@142f891]
2015-10-21 17:11:51,216 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@142f891]
2015-10-21 17:11:51,216 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@142f891]
2015-10-21 17:11:51,216 [http-nio-8888-exec-4] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:51,217 [http-nio-8888-exec-4] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:52,053 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001e after 1ms
2015-10-21 17:11:52,294 [http-nio-8888-exec-5] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:52,295 [http-nio-8888-exec-5] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:52,296 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:52,296 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1496fa0]
2015-10-21 17:11:52,296 [http-nio-8888-exec-5] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:52,296 [http-nio-8888-exec-5] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:52,297 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:52,297 [http-nio-8888-exec-5] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:52,297 [http-nio-8888-exec-5] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:52,300 [http-nio-8888-exec-5] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:52,300 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1496fa0]
2015-10-21 17:11:52,301 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1496fa0]
2015-10-21 17:11:52,301 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1496fa0]
2015-10-21 17:11:52,301 [http-nio-8888-exec-5] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:52,302 [http-nio-8888-exec-5] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:52,818 [http-nio-8888-exec-6] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:52,819 [http-nio-8888-exec-6] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:52,820 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:52,821 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1802d8a]
2015-10-21 17:11:52,821 [http-nio-8888-exec-6] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:52,821 [http-nio-8888-exec-6] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:52,821 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:52,821 [http-nio-8888-exec-6] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:52,822 [http-nio-8888-exec-6] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:52,825 [http-nio-8888-exec-6] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:52,825 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1802d8a]
2015-10-21 17:11:52,826 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1802d8a]
2015-10-21 17:11:52,826 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1802d8a]
2015-10-21 17:11:52,826 [http-nio-8888-exec-6] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:52,826 [http-nio-8888-exec-6] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:53,061 [http-nio-8888-exec-7] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:11:53,061 [http-nio-8888-exec-7] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:11:53,062 [http-nio-8888-exec-7] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:11:53,063 [http-nio-8888-exec-7] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@463fb3]
2015-10-21 17:11:53,063 [http-nio-8888-exec-7] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:11:53,063 [http-nio-8888-exec-7] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:11:53,063 [http-nio-8888-exec-7] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1047ada] will be managed by Spring
2015-10-21 17:11:53,063 [http-nio-8888-exec-7] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:11:53,064 [http-nio-8888-exec-7] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:11:53,066 [http-nio-8888-exec-7] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:11:53,066 [http-nio-8888-exec-7] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@463fb3]
2015-10-21 17:11:53,066 [http-nio-8888-exec-7] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@463fb3]
2015-10-21 17:11:53,066 [http-nio-8888-exec-7] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@463fb3]
2015-10-21 17:11:53,067 [http-nio-8888-exec-7] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:11:53,067 [http-nio-8888-exec-7] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:15,408 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo Log4jContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:15,543 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:12:15,545 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:12:15,545 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:12:15,552 [main] INFO  org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:510) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1aaed09: startup date [Wed Oct 21 17:12:15 CST 2015]; root of context hierarchy
2015-10-21 17:12:15,619 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:12:15,620 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:12:15,620 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:12:15,639 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring]
2015-10-21 17:12:15,640 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/META-INF/spring/*.xml]
2015-10-21 17:12:15,651 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring]
2015-10-21 17:12:15,652 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/META-INF/spring/*.xml]
2015-10-21 17:12:15,653 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring]
2015-10-21 17:12:15,653 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/META-INF/spring/*.xml]
2015-10-21 17:12:15,654 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]]
2015-10-21 17:12:15,656 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-config-service.xml]
2015-10-21 17:12:15,659 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:12:15,694 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2015-10-21 17:12:15,716 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-10-21 17:12:15,719 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:12:15,800 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
2015-10-21 17:12:15,807 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:12:15,819 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:12:15,844 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver (DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-10-21 17:12:15,879 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:12:15,879 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:12:15,879 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:12:15,885 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:231) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-10-21 17:12:15,891 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template]
2015-10-21 17:12:15,891 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,894 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,895 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/test-classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,897 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template]
2015-10-21 17:12:15,897 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,898 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,899 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-service/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,901 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template]
2015-10-21 17:12:15,901 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,902 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,904 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,905 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-manager/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,906 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template]
2015-10-21 17:12:15,907 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,908 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,908 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,909 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,910 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,913 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,914 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,916 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template]
2015-10-21 17:12:15,916 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,917 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,918 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,919 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-client/target/classes/com/sf/nirvana/template/**/*.class]
2015-10-21 17:12:15,921 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\demo\DemoServiceTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes\com\sf\nirvana\template\service\DemoServerMain.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl$1.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\DemoManager.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\DemoTest.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\domain\demo\extend\DemoTestExtend.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\domain\Demo.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoRestService.class], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes\com\sf\nirvana\template\service\demo\DemoService.class]]
2015-10-21 17:12:16,018 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoRestServiceImpl.class]
2015-10-21 17:12:16,020 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\com\sf\nirvana\template\service\demo\DemoServiceImpl.class]
2015-10-21 17:12:16,023 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\com\sf\nirvana\template\manager\demo\impl\DemoManagerImpl.class]
2015-10-21 17:12:16,071 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0]
2015-10-21 17:12:16,071 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes\META-INF\spring\spring-dubbo-service.xml]
2015-10-21 17:12:16,074 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:12:16,077 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2015-10-21 17:12:16,102 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-10-21 17:12:16,129 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:12:16,212 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes\META-INF\spring\spring-config-datasource-tx.xml]
2015-10-21 17:12:16,218 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:12:16,220 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:12:16,231 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
2015-10-21 17:12:16,232 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
2015-10-21 17:12:16,237 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-3.2.xsd
2015-10-21 17:12:16,240 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:12:16,306 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader (XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\META-INF\spring\spring-config-datasource.xml]
2015-10-21 17:12:16,309 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader (DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-21 17:12:16,311 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver (PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
2015-10-21 17:12:16,321 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader (DefaultBeanDefinitionDocumentReader.java:106) - Loading bean definitions
2015-10-21 17:12:16,323 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate (BeanDefinitionParserDelegate.java:500) - Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2015-10-21 17:12:16,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader (AbstractBeanDefinitionReader.java:216) - Loaded 19 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2015-10-21 17:12:16,323 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:540) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1aaed09: org.springframework.beans.factory.support.DefaultListableBeanFactory@576b3d: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0]; root of factory hierarchy
2015-10-21 17:12:16,370 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:12:16,370 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:12:16,396 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:12:16,399 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:12:16,399 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:12:16,399 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:12:16,399 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:12:16,447 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:12:16,447 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:12:16,514 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-21 17:12:16,515 [main] DEBUG org.springframework.core.env.MutablePropertySources (MutablePropertySources.java:107) - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-21 17:12:16,515 [main] DEBUG org.springframework.core.env.AbstractEnvironment (AbstractEnvironment.java:126) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-21 17:12:16,517 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper]
2015-10-21 17:12:16,518 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/dao/mapper/**/*.class]
2015-10-21 17:12:16,518 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/com/sf/nirvana/template/dao/mapper/**/*.class]
2015-10-21 17:12:16,519 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/sf/nirvana/template/dao/mapper/**/*.class] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class]]
2015-10-21 17:12:16,521 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider (ClassPathScanningCandidateComponentProvider.java:273) - Identified candidate component class: file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\com\sf\nirvana\template\dao\mapper\demo\DemoTestMapper.class]
2015-10-21 17:12:16,521 [main] DEBUG org.mybatis.spring.mapper.ClassPathMapperScanner (ClassPathMapperScanner.java:164) - Creating MapperFactoryBean with name 'demoTestMapper' and 'com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper' mapperInterface
2015-10-21 17:12:16,524 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:12:16,524 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:12:16,526 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-10-21 17:12:16,540 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:12:16,540 [main] INFO  org.springframework.core.io.support.PropertiesLoaderSupport (PropertiesLoaderSupport.java:172) - Loading properties file from class path resource [jdbc.properties]
2015-10-21 17:12:16,547 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:12:16,547 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:12:16,549 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:12:16,549 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:12:16,549 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:12:16,549 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:12:16,550 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:12:16,550 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:12:16,550 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:12:16,550 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:12:16,556 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-10-21 17:12:16,556 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:12:16,557 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:12:16,557 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:12:16,557 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-10-21 17:12:16,557 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:12:16,557 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:12:16,557 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:12:16,570 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-10-21 17:12:16,582 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:12:16,586 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:807) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@e417e7]
2015-10-21 17:12:16,589 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:831) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@e762ec]
2015-10-21 17:12:16,594 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory (DefaultListableBeanFactory.java:598) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@576b3d: defining beans [demoRestServiceImpl,demoServiceImpl,demoManagerImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,rest,com.sf.nirvana.template.service.demo.DemoService,com.sf.nirvana.template.service.demo.DemoRestService,transactionManager,dataAdvice,org.springframework.aop.config.internalAutoProxyCreator,dataPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,demoTestMapper]; root of factory hierarchy
2015-10-21 17:12:16,594 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:12:16,594 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:12:16,595 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,595 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,597 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' to allow for resolving potential circular references
2015-10-21 17:12:16,605 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataPointcut'
2015-10-21 17:12:16,613 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataPointcut'
2015-10-21 17:12:16,613 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,647 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoRestServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:12:16,647 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoRestServiceImpl' to allow for resolving potential circular references
2015-10-21 17:12:16,649 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoRestServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoRestServiceImpl.demoManager
2015-10-21 17:12:16,651 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,672 [main] DEBUG org.apache.ibatis.logging.LogFactory (LogFactory.java:128) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2015-10-21 17:12:16,675 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,676 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoTestMapper'
2015-10-21 17:12:16,676 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoTestMapper'
2015-10-21 17:12:16,676 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoTestMapper' to allow for resolving potential circular references
2015-10-21 17:12:16,692 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:12:16,692 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'sqlSessionFactory'
2015-10-21 17:12:16,696 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2015-10-21 17:12:16,700 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db]
2015-10-21 17:12:16,700 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:12:16,701 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:12:16,702 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:612) - Searching directory [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends] for files matching pattern [D:/user/709166/workspace/sf-nirvana-template/sf-nirvana-template-dao/target/classes/sqlmap/db/**/*Mapper.xml]
2015-10-21 17:12:16,704 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver (PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:/sqlmap/db/**/*Mapper.xml] to resources [file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml], file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]]
2015-10-21 17:12:16,704 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataSource'
2015-10-21 17:12:16,704 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataSource'
2015-10-21 17:12:16,704 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,734 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-10-21 17:12:16,777 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:16,777 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,124 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataSource'
2015-10-21 17:12:17,126 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2015-10-21 17:12:17,126 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:362) - Property 'configLocation' not specified, using default MyBatis Configuration
2015-10-21 17:12:17,348 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\DemoTestMapper.xml]'
2015-10-21 17:12:17,370 [main] DEBUG org.mybatis.spring.SqlSessionFactoryBean (SqlSessionFactoryBean.java:472) - Parsed mapper file: 'file [D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes\sqlmap\db\demo\extends\DemoTestExtendMapper.xml]'
2015-10-21 17:12:17,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,376 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'sqlSessionFactory'
2015-10-21 17:12:17,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,388 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'demoTestMapper'
2015-10-21 17:12:17,389 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,389 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,390 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoTestMapper'
2015-10-21 17:12:17,391 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoManagerImpl'
2015-10-21 17:12:17,391 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoManagerImpl'
2015-10-21 17:12:17,391 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,392 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl]: AutowiredFieldElement for private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper
2015-10-21 17:12:17,392 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoManagerImpl' to allow for resolving potential circular references
2015-10-21 17:12:17,394 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoManagerImpl': AutowiredFieldElement for private com.sf.nirvana.template.dao.mapper.demo.DemoTestMapper com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl.demoTestMapper
2015-10-21 17:12:17,395 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoTestMapper'
2015-10-21 17:12:17,397 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,397 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,401 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoManagerImpl' to bean named 'demoTestMapper'
2015-10-21 17:12:17,401 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,401 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,403 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'dataAdvice'
2015-10-21 17:12:17,403 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'dataAdvice'
2015-10-21 17:12:17,408 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'dataAdvice' to allow for resolving potential circular references
2015-10-21 17:12:17,415 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'transactionManager'
2015-10-21 17:12:17,416 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'transactionManager'
2015-10-21 17:12:17,416 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,423 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-10-21 17:12:17,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:12:17,428 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-10-21 17:12:17,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,429 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,431 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'transactionManager'
2015-10-21 17:12:17,431 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean '(inner bean)'
2015-10-21 17:12:17,431 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,438 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:12:17,439 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:12:17,439 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:12:17,439 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:12:17,439 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:12:17,439 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2015-10-21 17:12:17,439 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [select*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:12:17,440 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [query*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:12:17,440 [main] DEBUG org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource (NameMatchTransactionAttributeSource.java:95) - Adding transactional method [get*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
2015-10-21 17:12:17,440 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,440 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,441 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean '(inner bean)'
2015-10-21 17:12:17,441 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'dataAdvice'
2015-10-21 17:12:17,442 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'dataAdvice'
2015-10-21 17:12:17,454 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator (AbstractAutoProxyCreator.java:538) - Creating implicit proxy for bean 'demoManagerImpl' with 0 common interceptors and 2 specific interceptors
2015-10-21 17:12:17,456 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy (JdkDynamicAopProxy.java:115) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sf.nirvana.template.manager.demo.impl.DemoManagerImpl@1976e38]
2015-10-21 17:12:17,460 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoManagerImpl'
2015-10-21 17:12:17,461 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoRestServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:12:17,461 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,461 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,464 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoRestServiceImpl'
2015-10-21 17:12:17,465 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'demoServiceImpl'
2015-10-21 17:12:17,465 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'demoServiceImpl'
2015-10-21 17:12:17,465 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,469 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:71) - Registered injected element on class [com.sf.nirvana.template.service.demo.DemoServiceImpl]: AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:12:17,469 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'demoServiceImpl' to allow for resolving potential circular references
2015-10-21 17:12:17,474 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata (InjectionMetadata.java:85) - Processing injected method of bean 'demoServiceImpl': AutowiredFieldElement for private com.sf.nirvana.template.manager.demo.DemoManager com.sf.nirvana.template.service.demo.DemoServiceImpl.demoManager
2015-10-21 17:12:17,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:12:17,474 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor (AutowiredAnnotationBeanPostProcessor.java:436) - Autowiring by type from bean name 'demoServiceImpl' to bean named 'demoManagerImpl'
2015-10-21 17:12:17,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'demoServiceImpl'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoManagerImpl'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-21 17:12:17,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-10-21 17:12:17,476 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'rest'
2015-10-21 17:12:17,476 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'rest'
2015-10-21 17:12:17,476 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,478 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'rest' to allow for resolving potential circular references
2015-10-21 17:12:17,487 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,487 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,491 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'rest'
2015-10-21 17:12:17,491 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:12:17,491 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:12:17,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,494 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,671 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,688 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoService' to allow for resolving potential circular references
2015-10-21 17:12:17,713 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoServiceImpl'
2015-10-21 17:12:17,714 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:12:17,715 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,716 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,728 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:12:17,728 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry (DefaultSingletonBeanRegistry.java:215) - Creating shared instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:12:17,728 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:432) - Creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:12:17,729 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,732 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:506) - Eagerly caching bean 'com.sf.nirvana.template.service.demo.DemoRestService' to allow for resolving potential circular references
2015-10-21 17:12:17,732 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoRestServiceImpl'
2015-10-21 17:12:17,732 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'rest'
2015-10-21 17:12:17,733 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:1555) - Invoking afterPropertiesSet() on bean with name 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:12:17,734 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,734 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,734 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory (AbstractAutowireCapableBeanFactory.java:460) - Finished creating instance of bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:12:17,735 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'transactionManager'
2015-10-21 17:12:17,735 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataAdvice'
2015-10-21 17:12:17,735 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-10-21 17:12:17,735 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2015-10-21 17:12:17,735 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'dataSource'
2015-10-21 17:12:17,735 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:12:17,736 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2015-10-21 17:12:17,736 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-21 17:12:17,736 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'demoTestMapper'
2015-10-21 17:12:17,737 [main] DEBUG org.springframework.context.support.AbstractApplicationContext (AbstractApplicationContext.java:858) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@12e8947]
2015-10-21 17:12:17,738 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:12:17,739 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:12:17,740 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:12:17,740 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:12:17,740 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,849 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,865 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,887 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,906 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,906 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoService to url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9048&side=provider&timestamp=1445418737776, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,906 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoService url dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9048&side=provider&timestamp=1445418737776 to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=9048&registry=zookeeper&timestamp=1445418737757, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,908 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,934 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,964 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:17,993 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,012 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,077 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Using select timeout of 500, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,077 [main] DEBUG alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger (NettyHelper.java:70) -  [DUBBO] Epoll-bug workaround enabled = false, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,164 [main] INFO  com.alibaba.dubbo.remoting.transport.AbstractServer (AbstractServer.java:70) -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.118.45.69:20880, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,178 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,196 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:232) -  [DUBBO] Load registry store file d:\user\709166\.dubbo\dubbo-registry-10.202.4.179.cache, data: {com.sf.nirvana.template.service.demo.DemoRestService=empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=1588&server=tomcat&side=provider&threads=500&timestamp=1445418671074&validation=true, com.sf.nirvana.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=6368&side=provider&timestamp=1444802610435, com.sf.nirvana.test.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.nirvana.test.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.test.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=8284&side=provider&timestamp=1444803114507, com.sf.framework.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.framework.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.framework.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9040&side=provider&timestamp=1444793216887, com.sf.nirvana.template.service.demo.DemoService=empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=1588&side=provider&timestamp=1445418670479}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,219 [main] DEBUG org.I0Itec.zkclient.ZkConnection (ZkConnection.java:63) - Creating new ZookKeeper instance to connect to 10.202.4.179:2181.
2015-10-21 17:12:18,232 [ZkClient-EventThread-19-10.202.4.179:2181] INFO  org.I0Itec.zkclient.ZkEventThread (ZkEventThread.java:64) - Starting ZkClient event thread.
2015-10-21 17:12:18,235 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2015-10-21 17:12:18,235 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:host.name=HQSFTCSFIT0480A.sf.com
2015-10-21 17:12:18,235 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.version=1.7.0_60
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.vendor=Oracle Corporation
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.home=C:\Program Files\Java\jdk1.7.0_60\jre
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.class.path=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\test-classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-common\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-dao\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context-support\3.2.8.RELEASE\spring-context-support-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-jdbc\3.2.8.RELEASE\spring-jdbc-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-tx\3.2.8.RELEASE\spring-tx-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-oxm\3.2.8.RELEASE\spring-oxm-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\mysql\mysql-connector-java\5.1.8\mysql-connector-java-5.1.8.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\druid\1.0.6\druid-1.0.6.jar;C:\Program Files\Java\jdk1.7.0_60\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0_60\lib\tools.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-web\3.2.8.RELEASE\spring-web-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sap-esb-interface_20150129.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-manager\lib\sftpClient-1.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\jcraft\jsch\0.1.53\jsch-0.1.53.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\lingala\zip4j\zip4j\1.3.2\zip4j-1.3.2.jar;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\com\sf\framework\sf-framework-common\1.0.0\sf-framework-common-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator\5.1.1.Final\hibernate-validator-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\classmate\1.0.0\classmate-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator-annotation-processor\5.1.1.Final\hibernate-validator-annotation-processor-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\jackson\core\jackson-annotations\2.5.3\jackson-annotations-2.5.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\dubbo\sf.2.0.0\dubbo-sf.2.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-beans\3.2.8.RELEASE\spring-beans-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-core\3.2.8.RELEASE\spring-core-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context\3.2.8.RELEASE\spring-context-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-aop\3.2.8.RELEASE\spring-aop-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-expression\3.2.8.RELEASE\spring-expression-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpclient\4.2.1\httpclient-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\httpcomponents\httpcore\4.2.1\httpcore-4.2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\google\guava\guava\18.0\guava-18.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\101tec\zkclient\0.4\zkclient-0.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\opensymphony\quartz\quartz-all\1.6.1\quartz-all-1.6.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\activation\activation\1.1\activation-1.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-io\commons-io\2.1\commons-io-2.1.jar;D:\Program Files\apache-maven-3.2.1\localRepository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-core-asl\1.9.4\jackson-core-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-mapper-asl\1.9.4\jackson-mapper-asl-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-jaxrs\1.9.4\jackson-jaxrs-1.9.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\junit\junit\4.11\junit-4.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-test\3.2.8.RELEASE\spring-test-3.2.8.RELEASE.jar
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.7.0_60\jre\bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/lib/i386;C:\Program Files\Java\jdk1.7.0_60\bin;D:\Program Files\apache-maven-3.2.1\bin;D:\Program Files\apache-cxf-3.0.2\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;D:\Program Files\TortoiseSVN\bin;D:\Program Files\TortoiseGit\bin;C:\Program Files\Common Files\NetSarang;;D:\eclipse-jee-luna;;.
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.io.tmpdir=C:\Users\709166\AppData\Local\Temp\
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:java.compiler=<NA>
2015-10-21 17:12:18,236 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.name=Windows 7
2015-10-21 17:12:18,237 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.arch=x86
2015-10-21 17:12:18,237 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:os.version=6.1
2015-10-21 17:12:18,237 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.name=709166
2015-10-21 17:12:18,237 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.home=d:\user\709166
2015-10-21 17:12:18,237 [main] INFO  org.apache.zookeeper.Environment (Environment.java:100) - Client environment:user.dir=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-service
2015-10-21 17:12:18,241 [main] INFO  org.apache.zookeeper.ZooKeeper (ZooKeeper.java:438) - Initiating client connection, connectString=10.202.4.179:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@c09e0f
2015-10-21 17:12:18,245 [main] DEBUG org.apache.zookeeper.ClientCnxn (ClientCnxn.java:102) - zookeeper.disableAutoWatchReset is false
2015-10-21 17:12:18,259 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:893) - Awaiting connection to Zookeeper server
2015-10-21 17:12:18,259 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:643) - Waiting for keeper state SyncConnected
2015-10-21 17:12:18,266 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:975) - Opening socket connection to server 10.202.4.179/10.202.4.179:2181. Will not attempt to authenticate using SASL (unknown error)
2015-10-21 17:12:18,270 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:852) - Socket connection established to 10.202.4.179/10.202.4.179:2181, initiating session
2015-10-21 17:12:18,272 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:892) - Session establishment request sent on 10.202.4.179/10.202.4.179:2181
2015-10-21 17:12:18,280 [main-SendThread(10.202.4.179:2181)] INFO  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:1235) - Session establishment complete on server 10.202.4.179/10.202.4.179:2181, sessionid = 0x15060f0f114001f, negotiated timeout = 40000
2015-10-21 17:12:18,282 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:351) - Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-21 17:12:18,282 [main-EventThread] INFO  org.I0Itec.zkclient.ZkClient (ZkClient.java:449) - zookeeper state changed (SyncConnected)
2015-10-21 17:12:18,282 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:395) - Leaving process event
2015-10-21 17:12:18,282 [main] DEBUG org.I0Itec.zkclient.ZkClient (ZkClient.java:653) - State is SyncConnected
2015-10-21 17:12:18,284 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: dubbo://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9048&side=provider&timestamp=1445418737776, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,298 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,590,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:18,313 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,591,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:18,316 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,592,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:18,325 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,593,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D9048%2526side%253Dprovider%2526timestamp%253D1445418737776,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/providers/dubbo%253A%252F%252F10.118.45.69%253A20880%252Fcom.sf.nirvana.template.service.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D9048%2526side%253Dprovider%2526timestamp%253D1445418737776 
2015-10-21 17:12:18,329 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9048&side=provider&timestamp=1445418737776, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,334 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,594,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:18,337 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,595,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:18,340 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,596,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:18,348 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,596,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: s{458,458,1445417494258,1445417494258,0,0,0,0,0,0,458} 
2015-10-21 17:12:18,353 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,596,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoService/configurators,T  response:: v{} 
2015-10-21 17:12:18,353 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9048&side=provider&timestamp=1445418737776, urls: [empty://10.118.45.69:20880/com.sf.nirvana.template.service.demo.DemoService?anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&generic=false&interface=com.sf.nirvana.template.service.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9048&side=provider&timestamp=1445418737776], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,366 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,376 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,392 [main] INFO  com.alibaba.dubbo.config.spring.ServiceBean (ServiceBean.java:108) -  [DUBBO] The service ready on spring started. service: com.sf.nirvana.template.service.demo.DemoRestService, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,404 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader (ExtensionLoader.java:943) -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,428 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:518) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to local registry, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,429 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:474) -  [DUBBO] Export dubbo service com.sf.nirvana.template.service.demo.DemoRestService to url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9048&server=tomcat&side=provider&threads=500&timestamp=1445418738414&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:18,429 [main] INFO  com.alibaba.dubbo.config.ServiceConfig (ServiceConfig.java:485) -  [DUBBO] Register dubbo service com.sf.nirvana.template.service.demo.DemoRestService url rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9048&server=tomcat&side=provider&threads=500&timestamp=1445418738414&validation=true to registry registry://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?application=sf-template-provider&dubbo=sf.2.0.0&owner=morly&pid=9048&registry=zookeeper&timestamp=1445418738396, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:19,510 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:302) -  [DUBBO] Register: rest://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9048&server=tomcat&side=provider&threads=500&timestamp=1445418738414&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:19,515 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,597,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:19,519 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,598,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:19,522 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,599,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:19,527 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 13,1  replyHeader:: 13,600,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D9048%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418738414%2526validation%253Dtrue,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/providers/rest%253A%252F%252F10.118.45.69%253A8888%252Fservices%252Fcom.sf.nirvana.template.service.demo.DemoRestService%253Faccepts%253D500%2526anyhost%253Dtrue%2526application%253Dsf-template-provider%2526dubbo%253Dsf.2.0.0%2526extension%253Dcom.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.service.demo.DemoRestService%2526loadbalance%253Droundrobin%2526methods%253DregisterDemo%252CgetDemo%2526owner%253Dmorly%2526pid%253D9048%2526server%253Dtomcat%2526side%253Dprovider%2526threads%253D500%2526timestamp%253D1445418738414%2526validation%253Dtrue 
2015-10-21 17:12:19,527 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:325) -  [DUBBO] Subscribe: provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9048&server=tomcat&side=provider&threads=500&timestamp=1445418738414&validation=true, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:19,530 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,601,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:19,533 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,602,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:19,536 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,603,-110  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-21 17:12:19,539 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,603,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: s{507,507,1445417810227,1445417810227,0,0,0,0,0,0,507} 
2015-10-21 17:12:19,541 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:818) - Reading reply sessionid:0x15060f0f114001f, packet:: clientPath:null serverPath:null finished:false header:: 18,8  replyHeader:: 18,603,0  request:: '/dubbo/com.sf.nirvana.template.service.demo.DemoRestService/configurators,T  response:: v{} 
2015-10-21 17:12:19,541 [main] INFO  com.alibaba.dubbo.registry.support.AbstractRegistry (AbstractRegistry.java:422) -  [DUBBO] Notify urls for subscribe url provider://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9048&server=tomcat&side=provider&threads=500&timestamp=1445418738414&validation=true, urls: [empty://10.118.45.69:8888/services/com.sf.nirvana.template.service.demo.DemoRestService?accepts=500&anyhost=true&application=sf-template-provider&category=configurators&check=false&dubbo=sf.2.0.0&extension=com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter&generic=false&interface=com.sf.nirvana.template.service.demo.DemoRestService&loadbalance=roundrobin&methods=registerDemo,getDemo&owner=morly&pid=9048&server=tomcat&side=provider&threads=500&timestamp=1445418738414&validation=true], dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:19,544 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-10-21 17:12:19,544 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-10-21 17:12:19,544 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver (PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-10-21 17:12:19,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-21 17:12:19,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoService'
2015-10-21 17:12:19,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'com.sf.nirvana.template.service.demo.DemoRestService'
2015-10-21 17:12:19,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory (AbstractBeanFactory.java:246) - Returning cached instance of singleton bean 'sqlSessionFactory'
2015-10-21 17:12:19,545 [main] INFO  com.alibaba.dubbo.container.Main (Main.java:81) -  [DUBBO] Dubbo SpringContainer started!, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:21,358 [http-nio-8888-exec-1] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:12:21,375 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:12:21,412 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.util.logging.LoggerFactory (LoggerFactory.java:29) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-10-21 17:12:21,413 [http-nio-8888-exec-1] INFO  org.hibernate.validator.internal.util.Version (Version.java:27) - HV000001: Hibernate Validator 5.1.1.Final
2015-10-21 17:12:21,426 [http-nio-8888-exec-1] DEBUG hibernate.validator.internal.engine.resolver.DefaultTraversableResolver (DefaultTraversableResolver.java:74) - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2015-10-21 17:12:21,447 [http-nio-8888-exec-1] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser (ValidationXmlParser.java:88) - Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-10-21 17:12:21,470 [http-nio-8888-exec-1] DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser (ValidationXmlParser.java:95) - No META-INF/validation.xml found. Using annotation based configuration only.
2015-10-21 17:12:25,647 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:12:25,675 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0048a]
2015-10-21 17:12:25,725 [http-nio-8888-exec-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:12:26,472 [http-nio-8888-exec-1] INFO  com.alibaba.druid.pool.DruidDataSource (DruidDataSource.java:640) - {dataSource-1} inited
2015-10-21 17:12:26,484 [http-nio-8888-exec-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:12:26,492 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1ce99bc] will be managed by Spring
2015-10-21 17:12:26,561 [http-nio-8888-exec-1] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:12:26,843 [http-nio-8888-exec-1] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:12:27,049 [http-nio-8888-exec-1] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 0
2015-10-21 17:12:27,050 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0048a]
2015-10-21 17:12:27,051 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0048a]
2015-10-21 17:12:27,052 [http-nio-8888-exec-1] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0048a]
2015-10-21 17:12:27,052 [http-nio-8888-exec-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:12:32,871 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:12:46,204 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 3ms
2015-10-21 17:12:59,536 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 3ms
2015-10-21 17:13:12,870 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:13:26,207 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 3ms
2015-10-21 17:13:39,542 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 3ms
2015-10-21 17:13:52,876 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:14:06,211 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 4ms
2015-10-21 17:14:19,541 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 3ms
2015-10-21 17:14:32,871 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:14:46,206 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:14:51,348 [http-nio-8888-exec-2] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:14:51,352 [http-nio-8888-exec-2] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:14:59,538 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:14:59,957 [http-nio-8888-exec-1] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:15:01,401 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:15:01,404 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8722b6]
2015-10-21 17:15:01,405 [http-nio-8888-exec-2] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:15:01,424 [http-nio-8888-exec-2] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:15:01,425 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1ce99bc] will be managed by Spring
2015-10-21 17:15:01,426 [http-nio-8888-exec-2] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:15:01,429 [http-nio-8888-exec-2] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:15:01,444 [http-nio-8888-exec-2] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 1
2015-10-21 17:15:01,445 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8722b6]
2015-10-21 17:15:01,446 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8722b6]
2015-10-21 17:15:01,447 [http-nio-8888-exec-2] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8722b6]
2015-10-21 17:15:01,447 [http-nio-8888-exec-2] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:15:12,868 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:15:15,441 [http-nio-8888-exec-2] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:15:26,200 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:15:39,532 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 3ms
2015-10-21 17:15:52,813 [http-nio-8888-exec-4] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:15:52,815 [http-nio-8888-exec-4] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:15:52,861 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 1ms
2015-10-21 17:15:54,153 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:15:54,154 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf08dc]
2015-10-21 17:15:54,154 [http-nio-8888-exec-4] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:15:54,160 [http-nio-8888-exec-4] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:15:54,161 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1ce99bc] will be managed by Spring
2015-10-21 17:15:54,162 [http-nio-8888-exec-4] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:15:54,165 [http-nio-8888-exec-4] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:15:54,169 [http-nio-8888-exec-4] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 1
2015-10-21 17:15:54,170 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf08dc]
2015-10-21 17:15:54,171 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf08dc]
2015-10-21 17:15:54,171 [http-nio-8888-exec-4] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf08dc]
2015-10-21 17:15:54,172 [http-nio-8888-exec-4] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:16:04,221 [http-nio-8888-exec-4] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
Content-Type: application/json;charset=UTF-8
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:16:04,729 [http-nio-8888-exec-4] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:82) -  [DUBBO] The contents of response body is: 
{"id":1,"code":"test","description":"测试","comment":"测试数据","username":"test"}
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:16:06,193 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 1ms
2015-10-21 17:16:19,293 [http-nio-8888-exec-5] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:16:19,296 [http-nio-8888-exec-5] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/xml, text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:16:19,526 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:16:21,268 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:16:21,270 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109f7ae]
2015-10-21 17:16:21,271 [http-nio-8888-exec-5] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:16:21,274 [http-nio-8888-exec-5] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:16:21,274 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1ce99bc] will be managed by Spring
2015-10-21 17:16:21,275 [http-nio-8888-exec-5] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:16:21,275 [http-nio-8888-exec-5] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:16:21,281 [http-nio-8888-exec-5] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 1
2015-10-21 17:16:21,281 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109f7ae]
2015-10-21 17:16:21,281 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109f7ae]
2015-10-21 17:16:21,281 [http-nio-8888-exec-5] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109f7ae]
2015-10-21 17:16:21,282 [http-nio-8888-exec-5] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:16:23,269 [http-nio-8888-exec-5] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
Content-Type: text/xml;charset=UTF-8
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:16:23,723 [http-nio-8888-exec-5] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:82) -  [DUBBO] The contents of response body is: 
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><demo><id>1</id><username>test</username><code>test</code><description>测试</description><comment>测试数据</comment></demo>
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:16:32,859 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:16:46,191 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 1ms
2015-10-21 17:16:59,524 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 1ms
2015-10-21 17:17:12,859 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:17:26,192 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:17:28,059 [http-nio-8888-exec-6] DEBUG org.jboss.resteasy.logging.impl.Log4jLogger (Log4jLogger.java:60) - PathInfo: /services/demo/1
2015-10-21 17:17:28,059 [http-nio-8888-exec-6] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
accept-encoding: gzip, deflate, sdch
accept-language: zh-CN,zh;q=0.8
cache-control: max-age=0
connection: keep-alive
host: localhost:8888
upgrade-insecure-requests: 1
user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:17:30,413 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:104) - Creating a new SqlSession
2015-10-21 17:17:30,413 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:120) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614c7b]
2015-10-21 17:17:30,414 [http-nio-8888-exec-6] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2015-10-21 17:17:30,416 [http-nio-8888-exec-6] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:114) - Registering transaction synchronization for JDBC Connection
2015-10-21 17:17:30,417 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.transaction.SpringManagedTransaction (SpringManagedTransaction.java:86) - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1ce99bc] will be managed by Spring
2015-10-21 17:17:30,417 [http-nio-8888-exec-6] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==>  Preparing: SELECT c1.id, c1.code, c1.name, c1.description, c1.comment, c2.level, c2.level_name FROM demo_test c1 LEFT JOIN demo_test_level c2 ON c1.code=c2.code 
2015-10-21 17:17:30,418 [http-nio-8888-exec-6] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - ==> Parameters: 
2015-10-21 17:17:30,422 [http-nio-8888-exec-6] DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger (BaseJdbcLogger.java:139) - <==      Total: 1
2015-10-21 17:17:30,423 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils (SqlSessionUtils.java:163) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614c7b]
2015-10-21 17:17:30,423 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:287) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614c7b]
2015-10-21 17:17:30,423 [http-nio-8888-exec-6] DEBUG org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization (SqlSessionUtils.java:292) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@614c7b]
2015-10-21 17:17:30,423 [http-nio-8888-exec-6] DEBUG org.springframework.jdbc.datasource.DataSourceUtils (DataSourceUtils.java:327) - Returning JDBC Connection to DataSource
2015-10-21 17:17:31,702 [http-nio-8888-exec-6] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:97) -  [DUBBO] The HTTP headers are: 
Content-Type: application/json;charset=UTF-8
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:17:31,703 [http-nio-8888-exec-6] INFO  dubbo.rpc.protocol.rest.support.LoggingFilter (LoggingFilter.java:82) -  [DUBBO] The contents of response body is: 
{"id":1,"code":"test","description":"测试","comment":"测试数据","username":"test"}
, dubbo version: sf.2.0.0, current host: 127.0.0.1
2015-10-21 17:17:39,525 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:17:52,859 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 2ms
2015-10-21 17:18:06,192 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 1ms
2015-10-21 17:18:19,526 [main-SendThread(10.202.4.179:2181)] DEBUG org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:717) - Got ping response for sessionid: 0x15060f0f114001f after 1ms
