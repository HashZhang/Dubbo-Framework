2015-10-14 14:01:38 [INFO] [LoggerFactory] [main]                              ?.?():? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-10-14 14:01:38 [INFO] [Main] [main] m.alibaba.dubbo.container.Main.main():58 -  [DUBBO] Use container type([log4j, spring]) to run dubbo serivce., dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:01:50 [INFO] [LoggerFactory] [main]                              ?.?():? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-10-14 14:01:50 [INFO] [Main] [main] m.alibaba.dubbo.container.Main.main():58 -  [DUBBO] Use container type([log4j, spring]) to run dubbo serivce., dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:26 [INFO] [LoggerFactory] [main]                              ?.?():? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-10-14 14:02:26 [INFO] [Main] [main] m.alibaba.dubbo.container.Main.main():58 -  [DUBBO] Use container type([log4j, spring]) to run dubbo serivce., dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:37 [DEBUG] [SpringJUnit4ClassRunner] [main] junit4.SpringJUnit4ClassRunner.<init>():106 - SpringJUnit4ClassRunner constructor called with [class com.sf.nirvana.template.dubbo.demo.DemoActionTest].
2015-10-14 14:02:37 [DEBUG] [AbstractDelegatingSmartContextLoader] [main] ctDelegatingSmartContextLoader.delegateProcessing():89 - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6bf80b declaringClass = 'com.sf.nirvana.template.dubbo.demo.DemoActionTest', locations = '{/spring-service.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-10-14 14:02:37 [DEBUG] [ContextLoaderUtils] [main] est.context.ContextLoaderUtils.resolveActiveProfiles():471 - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:37 [INFO] [TestContextManager] [main] est.context.TestContextManager.retrieveTestExecutionListeners():224 - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
2015-10-14 14:02:37 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:37 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:37 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:37 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [ProfileValueUtils] [main] t.annotation.ProfileValueUtils.retrieveProfileValueSource():80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sf.nirvana.template.dubbo.demo.DemoActionTest]
2015-10-14 14:02:38 [DEBUG] [DependencyInjectionTestExecutionListener] [main] InjectionTestExecutionListener.prepareTestInstance():73 - Performing dependency injection for test context [[TestContext@f18070 testClass = DemoActionTest, testInstance = com.sf.nirvana.template.dubbo.demo.DemoActionTest@12768bb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4d080d testClass = DemoActionTest, locations = '{classpath:/spring-service.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-10-14 14:02:38 [DEBUG] [AbstractDelegatingSmartContextLoader] [main] ctDelegatingSmartContextLoader.delegateLoading():98 - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@4d080d testClass = DemoActionTest, locations = '{classpath:/spring-service.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-10-14 14:02:38 [DEBUG] [AbstractGenericContextLoader] [main] t.AbstractGenericContextLoader.loadContext():104 - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@4d080d testClass = DemoActionTest, locations = '{classpath:/spring-service.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-10-14 14:02:38 [DEBUG] [StandardEnvironment] [main] ore.env.MutablePropertySources.addLast():107 - Adding [systemProperties] PropertySource with lowest search precedence
2015-10-14 14:02:38 [DEBUG] [StandardEnvironment] [main] ore.env.MutablePropertySources.addLast():107 - Adding [systemEnvironment] PropertySource with lowest search precedence
2015-10-14 14:02:38 [DEBUG] [StandardEnvironment] [main] k.core.env.AbstractEnvironment.<init>():126 - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-10-14 14:02:38 [INFO] [XmlBeanDefinitionReader] [main] ry.xml.XmlBeanDefinitionReader.loadBeanDefinitions():315 - Loading XML bean definitions from class path resource [spring-service.xml]
2015-10-14 14:02:38 [DEBUG] [DefaultDocumentLoader] [main] tory.xml.DefaultDocumentLoader.loadDocument():72 - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-10-14 14:02:38 [DEBUG] [PluggableSchemaResolver] [main] ry.xml.PluggableSchemaResolver.getSchemaMappings():140 - Loading schema mappings from [META-INF/spring.schemas]
2015-10-14 14:02:38 [DEBUG] [PluggableSchemaResolver] [main] ry.xml.PluggableSchemaResolver.getSchemaMappings():146 - Loaded schema mappings: {http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-10-14 14:02:38 [DEBUG] [PluggableSchemaResolver] [main] ry.xml.PluggableSchemaResolver.resolveEntity():118 - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2015-10-14 14:02:38 [DEBUG] [PluggableSchemaResolver] [main] ry.xml.PluggableSchemaResolver.resolveEntity():118 - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-10-14 14:02:38 [DEBUG] [DefaultBeanDefinitionDocumentReader] [main] ltBeanDefinitionDocumentReader.registerBeanDefinitions():106 - Loading bean definitions
2015-10-14 14:02:38 [DEBUG] [DefaultNamespaceHandlerResolver] [main] efaultNamespaceHandlerResolver.getHandlerMappings():156 - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-10-14 14:02:38 [INFO] [LoggerFactory] [main]                              ?.?():? - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-10-14 14:02:38 [DEBUG] [XmlBeanDefinitionReader] [main] t.AbstractBeanDefinitionReader.loadBeanDefinitions():216 - Loaded 1 bean definitions from location pattern [classpath:/spring-service.xml]
2015-10-14 14:02:38 [INFO] [GenericApplicationContext] [main] ort.AbstractApplicationContext.prepareRefresh():510 - Refreshing org.springframework.context.support.GenericApplicationContext@18edd8d: startup date [Wed Oct 14 14:02:38 CST 2015]; root of context hierarchy
2015-10-14 14:02:38 [DEBUG] [GenericApplicationContext] [main] ort.AbstractApplicationContext.obtainFreshBeanFactory():540 - Bean factory for org.springframework.context.support.GenericApplicationContext@18edd8d: org.springframework.beans.factory.support.DefaultListableBeanFactory@10ce7fb: defining beans [demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor]; root of factory hierarchy
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] t.DefaultSingletonBeanRegistry.getSingleton():215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():432 - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.doCreateBean():506 - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():460 - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] t.DefaultSingletonBeanRegistry.getSingleton():215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():432 - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.doCreateBean():506 - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():460 - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] t.DefaultSingletonBeanRegistry.getSingleton():215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():432 - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.doCreateBean():506 - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():460 - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] t.DefaultSingletonBeanRegistry.getSingleton():215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():432 - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.doCreateBean():506 - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():460 - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] t.DefaultSingletonBeanRegistry.getSingleton():215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():432 - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.doCreateBean():506 - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():460 - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-14 14:02:38 [DEBUG] [GenericApplicationContext] [main] ort.AbstractApplicationContext.initMessageSource():807 - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1d198c3]
2015-10-14 14:02:38 [DEBUG] [GenericApplicationContext] [main] ort.AbstractApplicationContext.initApplicationEventMulticaster():831 - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@acbf34]
2015-10-14 14:02:38 [INFO] [DefaultListableBeanFactory] [main] ort.DefaultListableBeanFactory.preInstantiateSingletons():598 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10ce7fb: defining beans [demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] t.DefaultSingletonBeanRegistry.getSingleton():215 - Creating shared instance of singleton bean 'demoService'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():432 - Creating instance of bean 'demoService'
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.doCreateBean():506 - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.invokeInitMethods():1555 - Invoking afterPropertiesSet() on bean with name 'demoService'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ractAutowireCapableBeanFactory.createBean():460 - Finished creating instance of bean 'demoService'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-10-14 14:02:38 [DEBUG] [GenericApplicationContext] [main] ort.AbstractApplicationContext.initLifecycleProcessor():858 - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@13b0c5b]
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-10-14 14:02:38 [DEBUG] [PropertySourcesPropertyResolver] [main] ropertySourcesPropertyResolver.getProperty():81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-10-14 14:02:38 [DEBUG] [PropertySourcesPropertyResolver] [main] ropertySourcesPropertyResolver.getProperty():81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-10-14 14:02:38 [DEBUG] [PropertySourcesPropertyResolver] [main] ropertySourcesPropertyResolver.getProperty():103 - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-10-14 14:02:38 [DEBUG] [CacheAwareContextLoaderDelegate] [main] acheAwareContextLoaderDelegate.loadContext():93 - Storing ApplicationContext in cache under key [[MergedContextConfiguration@4d080d testClass = DemoActionTest, locations = '{classpath:/spring-service.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-10-14 14:02:38 [DEBUG] [InjectionMetadata] [main] y.annotation.InjectionMetadata.inject():85 - Processing injected method of bean 'com.sf.nirvana.template.dubbo.demo.DemoActionTest': AutowiredFieldElement for private com.sf.nirvana.template.dubbo.demo.DemoService com.sf.nirvana.template.dubbo.demo.DemoActionTest.demoService
2015-10-14 14:02:38 [DEBUG] [DefaultListableBeanFactory] [main] ry.support.AbstractBeanFactory.doGetBean():246 - Returning cached instance of singleton bean 'demoService'
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [INFO] [ZookeeperRegistry] [main] istry.support.AbstractRegistry.loadProperties():232 -  [DUBBO] Load registry store file d:\user\709166\.dubbo\dubbo-registry-10.202.4.179.cache, data: {com.sf.nirvana.template.dubbo.demo.DemoService=dubbo://10.118.45.100:20880/com.sf.nirvana.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=12028&side=provider&timestamp=1444802469288 empty://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=configurators&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=1516&side=consumer&timestamp=1444802546972 empty://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=routers&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=1516&side=consumer&timestamp=1444802546972, com.sf.framework.template.dubbo.demo.DemoService=empty://10.118.45.100:20880/com.sf.framework.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&category=configurators&check=false&dubbo=sf.1.0.1&generic=false&interface=com.sf.framework.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=9040&side=provider&timestamp=1444793216887}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [DEBUG] [ZkConnection] [main] g.I0Itec.zkclient.ZkConnection.connect():63 - Creating new ZookKeeper instance to connect to 10.202.4.179:2181.
2015-10-14 14:02:38 [INFO] [ZkEventThread] [ZkClient-EventThread-12-10.202.4.179:2181] .I0Itec.zkclient.ZkEventThread.run():64 - Starting ZkClient event thread.
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:host.name=HQSFTCSFIT0480A.sf.com
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.version=1.7.0_60
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.vendor=Oracle Corporation
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.home=C:\Program Files\Java\jdk1.7.0_60\jre
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.class.path=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-test\target\test-classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-test\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-client\target\classes;D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-common\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator\5.1.1.Final\hibernate-validator-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\classmate\1.0.0\classmate-1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hibernate\hibernate-validator-annotation-processor\5.1.1.Final\hibernate-validator-annotation-processor-5.1.1.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\fasterxml\jackson\core\jackson-annotations\2.5.3\jackson-annotations-2.5.3.jar;D:\user\709166\workspace\sf-framework-common\target\classes;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-beans\3.2.8.RELEASE\spring-beans-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\google\guava\guava\18.0\guava-18.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\commons\commons-lang3\3.3.2\commons-lang3-3.3.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\alibaba\dubbo\sf.1.0.0\dubbo-sf.1.0.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-core\3.2.8.RELEASE\spring-core-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-context\3.2.8.RELEASE\spring-context-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-aop\3.2.8.RELEASE\spring-aop-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-expression\3.2.8.RELEASE\spring-expression-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-web\3.2.8.RELEASE\spring-web-3.2.8.RELEASE.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;D:\Program Files\apache-maven-3.2.1\localRepository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Program Files\apache-maven-3.2.1\localRepository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;D:\Program Files\apache-maven-3.2.1\localRepository\com\101tec\zkclient\0.4\zkclient-0.4.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\Program Files\apache-maven-3.2.1\localRepository\junit\junit\4.11\junit-4.11.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\Program Files\apache-maven-3.2.1\localRepository\org\springframework\spring-test\3.2.8.RELEASE\spring-test-3.2.8.RELEASE.jar;/D:/eclipse-jee-luna/configuration/org.eclipse.osgi/362/0/.cp/;/D:/eclipse-jee-luna/configuration/org.eclipse.osgi/361/0/.cp/
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0_60/bin/../jre/lib/i386;C:\Program Files\Java\jdk1.7.0_60\bin;D:\Program Files\apache-maven-3.2.1\bin;D:\Program Files\apache-cxf-3.0.2\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;D:\Program Files\TortoiseSVN\bin;D:\Program Files\TortoiseGit\bin;C:\Program Files\Common Files\NetSarang;;D:\eclipse-jee-luna;;.
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.io.tmpdir=C:\Users\709166\AppData\Local\Temp\
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:java.compiler=<NA>
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:os.name=Windows 7
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:os.arch=x86
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:os.version=6.1
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:user.name=709166
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:user.home=d:\user\709166
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] g.apache.zookeeper.Environment.logEnv():100 - Client environment:user.dir=D:\user\709166\workspace\sf-nirvana-template\sf-nirvana-template-test
2015-10-14 14:02:38 [INFO] [ZooKeeper] [main] org.apache.zookeeper.ZooKeeper.<init>():438 - Initiating client connection, connectString=10.202.4.179:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@63f7c7
2015-10-14 14:02:38 [DEBUG] [ClientCnxn] [main] rg.apache.zookeeper.ClientCnxn.<clinit>():102 - zookeeper.disableAutoWatchReset is false
2015-10-14 14:02:38 [DEBUG] [ZkClient] [main]   org.I0Itec.zkclient.ZkClient.connect():893 - Awaiting connection to Zookeeper server
2015-10-14 14:02:38 [DEBUG] [ZkClient] [main]   org.I0Itec.zkclient.ZkClient.waitForKeeperState():643 - Waiting for keeper state SyncConnected
2015-10-14 14:02:38 [INFO] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.logStartConnect():975 - Opening socket connection to server 10.202.4.179/10.202.4.179:2181. Will not attempt to authenticate using SASL (unknown error)
2015-10-14 14:02:38 [INFO] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.primeConnection():852 - Socket connection established to 10.202.4.179/10.202.4.179:2181, initiating session
2015-10-14 14:02:38 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.primeConnection():892 - Session establishment request sent on 10.202.4.179/10.202.4.179:2181
2015-10-14 14:02:38 [INFO] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.onConnected():1235 - Session establishment complete on server 10.202.4.179/10.202.4.179:2181, sessionid = 0x15060f0f114000c, negotiated timeout = 30000
2015-10-14 14:02:38 [DEBUG] [ZkClient] [main-EventThread]   org.I0Itec.zkclient.ZkClient.process():351 - Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-14 14:02:38 [INFO] [ZkClient] [main-EventThread]   org.I0Itec.zkclient.ZkClient.processStateChanged():449 - zookeeper state changed (SyncConnected)
2015-10-14 14:02:38 [DEBUG] [ZkClient] [main-EventThread]   org.I0Itec.zkclient.ZkClient.process():395 - Leaving process event
2015-10-14 14:02:38 [DEBUG] [ZkClient] [main]   org.I0Itec.zkclient.ZkClient.waitForKeeperState():653 - State is SyncConnected
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:38 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: sf.1.0.0, current host: 127.0.0.1
2015-10-14 14:02:39 [INFO] [ZookeeperRegistry] [main] istry.support.AbstractRegistry.register():302 -  [DUBBO] Register: consumer://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=consumers&check=false&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=5848&side=consumer&timestamp=1444802558777, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,193,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,194,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,195,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,196,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/consumers/consumer%253A%252F%252F10.118.45.100%252Fcom.sf.nirvana.template.dubbo.demo.DemoService%253Fapplication%253Dsf-framework-client%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253Dsf.1.0.0%2526interface%253Dcom.sf.nirvana.template.dubbo.demo.DemoService%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D5848%2526side%253Dconsumer%2526timestamp%253D1444802558777,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/consumers/consumer%253A%252F%252F10.118.45.100%252Fcom.sf.nirvana.template.dubbo.demo.DemoService%253Fapplication%253Dsf-framework-client%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253Dsf.1.0.0%2526interface%253Dcom.sf.nirvana.template.dubbo.demo.DemoService%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D5848%2526side%253Dconsumer%2526timestamp%253D1444802558777 
2015-10-14 14:02:39 [INFO] [ZookeeperRegistry] [main] istry.support.AbstractRegistry.subscribe():325 -  [DUBBO] Subscribe: consumer://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=providers,configurators,routers&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=5848&side=consumer&timestamp=1444802558777, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,197,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,198,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,199,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,199,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/providers,T  response:: s{156,156,1444802469467,1444802469467,0,1,0,0,0,1,162} 
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,199,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F10.118.45.100%253A20880%252Fcom.sf.nirvana.template.dubbo.demo.DemoService%253Fanyhost%253Dtrue%2526application%253Dsf-framework-provider%2526dubbo%253Dsf.1.0.1%2526generic%253Dfalse%2526interface%253Dcom.sf.nirvana.template.dubbo.demo.DemoService%2526loadbalance%253Droundrobin%2526methods%253DsayHello%2526owner%253Dmorly%2526pid%253D12028%2526side%253Dprovider%2526timestamp%253D1444802469288} 
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,200,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,201,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,202,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,202,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/configurators,T  response:: s{176,176,1444802469489,1444802469489,0,0,0,0,0,0,176} 
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,202,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/configurators,T  response:: v{} 
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,203,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,204,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,205,-110  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,205,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/routers,T  response:: s{172,172,1444802469482,1444802469482,0,0,0,0,0,0,172} 
2015-10-14 14:02:39 [DEBUG] [ClientCnxn] [main-SendThread(10.202.4.179:2181)] ookeeper.ClientCnxn$SendThread.readResponse():818 - Reading reply sessionid:0x15060f0f114000c, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,205,0  request:: '/dubbo/com.sf.nirvana.template.dubbo.demo.DemoService/routers,T  response:: v{} 
2015-10-14 14:02:39 [INFO] [ZookeeperRegistry] [main] istry.support.AbstractRegistry.notify():422 -  [DUBBO] Notify urls for subscribe url consumer://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=providers,configurators,routers&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=5848&side=consumer&timestamp=1444802558777, urls: [dubbo://10.118.45.100:20880/com.sf.nirvana.template.dubbo.demo.DemoService?anyhost=true&application=sf-framework-provider&dubbo=sf.1.0.1&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=12028&side=provider&timestamp=1444802469288, empty://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=configurators&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=5848&side=consumer&timestamp=1444802558777, empty://10.118.45.100/com.sf.nirvana.template.dubbo.demo.DemoService?application=sf-framework-client&category=routers&dubbo=sf.1.0.0&interface=com.sf.nirvana.template.dubbo.demo.DemoService&methods=sayHello&owner=morly&pid=5848&side=consumer&timestamp=1444802558777], dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [INFO] [AbstractClient] [main] oting.transport.AbstractClient.connect():287 -  [DUBBO] Successed connect to server /10.118.45.100:20880 from NettyClient 10.118.45.100 using dubbo version sf.1.0.0, channel is NettyChannel [channel=[id: 0x00c5f45d, /10.118.45.100:60035 => /10.118.45.100:20880]], dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [INFO] [AbstractClient] [main] oting.transport.AbstractClient.<init>():105 -  [DUBBO] Start NettyClient HQSFTCSFIT0480A/10.118.45.100 connect to the server /10.118.45.100:20880, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [ExtensionLoader] [main] mmon.extension.ExtensionLoader.createAdaptiveExtensionClassCode():943 -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [INFO] [AbstractConfig] [main] a.dubbo.config.ReferenceConfig.createProxy():423 -  [DUBBO] Refer dubbo service com.sf.nirvana.template.dubbo.demo.DemoService from url zookeeper://10.202.4.179:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=sf-framework-client&check=false&dubbo=sf.1.0.0&generic=false&interface=com.sf.nirvana.template.dubbo.demo.DemoService&loadbalance=roundrobin&methods=sayHello&owner=morly&pid=5848&side=consumer&timestamp=1444802558777, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:39 [DEBUG] [AutowiredAnnotationBeanPostProcessor] [main] redAnnotationBeanPostProcessor.registerDependentBeans():436 - Autowiring by type from bean name 'com.sf.nirvana.template.dubbo.demo.DemoActionTest' to bean named 'demoService'
2015-10-14 14:02:39 [DEBUG] [DecodeHandler] [DubboClientHandler-10.118.45.100:20880-thread-1] moting.transport.DecodeHandler.decode():60 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: sf.1.0.0, current host: 10.118.45.100
2015-10-14 14:02:41 [DEBUG] [DecodeHandler] [DubboClientHandler-10.118.45.100:20880-thread-1] moting.transport.DecodeHandler.decode():60 -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: sf.1.0.0, current host: 10.118.45.100
